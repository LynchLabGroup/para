************* Module bin
C:  1, 0: Final newline missing (missing-final-newline)
C:  1, 0: Missing module docstring (missing-docstring)
************* Module bin.extract_rand_cds
C: 10, 0: Trailing whitespace (trailing-whitespace)
W: 11, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 12, 0: Trailing whitespace (trailing-whitespace)
W: 13, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 14, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 16, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 17, 0: Trailing whitespace (trailing-whitespace)
C: 18, 0: Trailing whitespace (trailing-whitespace)
W: 18, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 18, 0: Exactly one space required after comma
	print "Parameters used: {} genes at least, retrieve {} CDSs".format(num,cds)	
                                                                        ^ (bad-whitespace)
W: 21, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 21, 0: Exactly one space required after comma
	fam_parser,spec = fam.family_parse(family_file,num,header)
           ^ (bad-whitespace)
C: 21, 0: Exactly one space required after comma
	fam_parser,spec = fam.family_parse(family_file,num,header)
                                               ^ (bad-whitespace)
C: 21, 0: Exactly one space required after comma
	fam_parser,spec = fam.family_parse(family_file,num,header)
                                                   ^ (bad-whitespace)
W: 23, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 25, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 26, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 27, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 28, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 30, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 31, 0: Trailing whitespace (trailing-whitespace)
W: 32, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 33, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 34, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 35, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 36, 0: Trailing whitespace (trailing-whitespace)
W: 38, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 39, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 40, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 41, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 42, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 43, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 46, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 47, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 48, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 49, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 50, 0: Trailing whitespace (trailing-whitespace)
W: 50, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 50, 0: Exactly one space required after comma
		gff_rec[gk] = pg.load_gff(gff_files[gk],["CDS"]) 
                                         ^ (bad-whitespace)
W: 51, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 54, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 54, 0: Exactly one space required after comma
	fam_rand = random.sample(fam_parser,cds)
                                    ^ (bad-whitespace)
W: 56, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 58, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 58, 0: Exactly one space required after comma
	fam.family_cds(fam_rand,gff_rec,fasta_rec,"data/families/WGD1/CDS/")
                        ^ (bad-whitespace)
C: 58, 0: Exactly one space required after comma
	fam.family_cds(fam_rand,gff_rec,fasta_rec,"data/families/WGD1/CDS/")
                                ^ (bad-whitespace)
C: 58, 0: Exactly one space required after comma
	fam.family_cds(fam_rand,gff_rec,fasta_rec,"data/families/WGD1/CDS/")
                                          ^ (bad-whitespace)
W: 62, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:  1, 0: Missing module docstring (missing-docstring)
W:  3, 0: Relative import 'gff.parse_gff_v2', should be 'bin.gff.parse_gff_v2' (relative-import)
W:  4, 0: Relative import 'gff.family', should be 'bin.gff.family' (relative-import)
C:  7, 0: Missing function docstring (missing-docstring)
C: 40, 5: Invalid variable name "fk" (invalid-name)
C: 48, 5: Invalid variable name "gk" (invalid-name)
W: 21,12: Unused variable 'spec' (unused-variable)
************* Module bin.profiling
C:  6, 0: Exactly one space required after comma
profile.run("from gff import main; main.main()","results/profile1803_2.tmp")
                                               ^ (bad-whitespace)
C:  1, 0: Missing module docstring (missing-docstring)
************* Module bin.bigfoot.__init__
C:  1, 0: Final newline missing (missing-final-newline)
************* Module bin.bigfoot
C:  1, 0: Missing module docstring (missing-docstring)
************* Module bin.bigfoot.parser
W: 11, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 12, 0: Line too long (128/80) (line-too-long)
W: 15, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 15, 0: Exactly one space required after comma
	def __init__(self,seqfile,predfile):
                  ^ (bad-whitespace)
C: 15, 0: Exactly one space required after comma
	def __init__(self,seqfile,predfile):
                          ^ (bad-whitespace)
W: 16, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 21, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 22, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 23, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 24, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 26, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 28, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 28, 0: Line too long (83/80) (line-too-long)
C: 28, 0: Exactly one space required after comma
		s = "Sequence File: {}\nPrediction File: {}".format(self._seqfile,self._predfile)
                                                                   ^ (bad-whitespace)
W: 30, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 32, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 33, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 35, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 36, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 40, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 42, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 44, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 44, 0: Exactly one space required after comma
			with open(self._seqfile,"r") as f:
                          ^ (bad-whitespace)
W: 45, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 45, 0: Exactly one space required after comma
				for i,l in enumerate(f.readlines()):
         ^ (bad-whitespace)
W: 46, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 47, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 48, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 49, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 51, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 53, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 54, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 55, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 57, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 57, 0: Exactly one space required after comma
	def motifs(self,thre,size,align):
                ^ (bad-whitespace)
C: 57, 0: Exactly one space required after comma
	def motifs(self,thre,size,align):
                     ^ (bad-whitespace)
C: 57, 0: Exactly one space required after comma
	def motifs(self,thre,size,align):
                          ^ (bad-whitespace)
W: 58, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 59, 0: Line too long (106/80) (line-too-long)
W: 62, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 63, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 64, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 65, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 66, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 67, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 68, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 69, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 71, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 71, 0: Exactly one space required after comma
		seqs[0].weight(self._predfile,self._seqfile) #weight first sequence
                               ^ (bad-whitespace)
W: 72, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 73, 0: Line too long (98/80) (line-too-long)
W: 73, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 73, 0: Exactly one space required after comma
		known = seqs[0].motifs(thre,size,align) #extract motifs with given threshold from first sequence
                             ^ (bad-whitespace)
C: 73, 0: Exactly one space required after comma
		known = seqs[0].motifs(thre,size,align) #extract motifs with given threshold from first sequence
                                  ^ (bad-whitespace)
W: 75, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 77, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 77, 0: Exactly one space required after comma
		for i,k in enumerate(known):
       ^ (bad-whitespace)
W: 79, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 81, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 83, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 84, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 85, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 86, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 86, 0: Exactly one space required before assignment
			mot[name]["size"]  = k[2] - k[1] + 1 #compute the size of the motif
                      ^ (bad-whitespace)
W: 87, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 89, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 90, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 92, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 93, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 94, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 95, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 97, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 99, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 99, 0: Exactly one space required after comma
	def write(self,output):
               ^ (bad-whitespace)
W:100, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:101, 0: Line too long (81/80) (line-too-long)
W:104, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:105, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:106, 0: Trailing whitespace (trailing-whitespace)
W:107, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:108, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:109, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:110, 0: Trailing whitespace (trailing-whitespace)
W:111, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:111, 0: Exactly one space required after comma
		with open(output,"w") as o:
                  ^ (bad-whitespace)
W:114, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:114, 0: Line too long (155/80) (line-too-long)
C:114, 0: Exactly one space required after comma
			print >> o, "Launched:{} GMT Threshold used: {} AlignThreshold: {} Size(over): {}\n".format(strftime("%a, %d %b %Y %H:%M:%S", gmtime()),thre,align,size)
                                                                                                                                          ^ (bad-whitespace)
C:114, 0: Exactly one space required after comma
			print >> o, "Launched:{} GMT Threshold used: {} AlignThreshold: {} Size(over): {}\n".format(strftime("%a, %d %b %Y %H:%M:%S", gmtime()),thre,align,size)
                                                                                                                                               ^ (bad-whitespace)
C:114, 0: Exactly one space required after comma
			print >> o, "Launched:{} GMT Threshold used: {} AlignThreshold: {} Size(over): {}\n".format(strftime("%a, %d %b %Y %H:%M:%S", gmtime()),thre,align,size)
                                                                                                                                                     ^ (bad-whitespace)
W:115, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:116, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:117, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:120, 0: Line too long (170/80) (line-too-long)
W:120, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:120, 0: Exactly one space required after comma
					print >> o, "\n{} Start: {} Stop: {} AvgPhylogeneticScore: {} AvgAlignScore: {} Size: {}\n".format(k,smk["start"],smk["stop"],smk["score"],smk["align"], smk["size"])
                                                                                                         ^ (bad-whitespace)
C:120, 0: Exactly one space required after comma
					print >> o, "\n{} Start: {} Stop: {} AvgPhylogeneticScore: {} AvgAlignScore: {} Size: {}\n".format(k,smk["start"],smk["stop"],smk["score"],smk["align"], smk["size"])
                                                                                                                      ^ (bad-whitespace)
C:120, 0: Exactly one space required after comma
					print >> o, "\n{} Start: {} Stop: {} AvgPhylogeneticScore: {} AvgAlignScore: {} Size: {}\n".format(k,smk["start"],smk["stop"],smk["score"],smk["align"], smk["size"])
                                                                                                                                  ^ (bad-whitespace)
C:120, 0: Exactly one space required after comma
					print >> o, "\n{} Start: {} Stop: {} AvgPhylogeneticScore: {} AvgAlignScore: {} Size: {}\n".format(k,smk["start"],smk["stop"],smk["score"],smk["align"], smk["size"])
                                                                                                                                               ^ (bad-whitespace)
W:122, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:123, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:125, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:126, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:126, 0: Line too long (88/80) (line-too-long)
W:127, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:127, 0: Exactly one space required after comma
							print >> o, "{0:20} {1}".format(s,smk[s].upper())
                                        ^ (bad-whitespace)
C:129, 0: Trailing whitespace (trailing-whitespace)
C:  1, 0: Missing module docstring (missing-docstring)
W:  7, 0: Relative import 'weight', should be 'bin.bigfoot.weight' (relative-import)
C: 28, 2: Invalid variable name "s" (invalid-name)
C: 44,35: Invalid variable name "f" (invalid-name)
C: 45,10: Invalid variable name "l" (invalid-name)
W: 45, 8: Unused variable 'i' (unused-variable)
C: 89, 7: Invalid variable name "s" (invalid-name)
C:111,27: Invalid variable name "o" (invalid-name)
C:125, 9: Invalid variable name "s" (invalid-name)
************* Module bin.bigfoot.setup
C: 12, 0: Line too long (304/80) (line-too-long)
C: 15, 0: Line too long (98/80) (line-too-long)
C: 15, 0: Exactly one space required after comma
parser.add_argument("pred",help=".pred file generated by BigFoot. (Phylogenetic prediction file)")
                          ^ (bad-whitespace)
C: 16, 0: Line too long (134/80) (line-too-long)
C: 16, 0: Exactly one space required after comma
parser.add_argument("-s","--size",help="minimal size of the motifs you want to search for (default: %(default)s)", type=int,default=1)
                        ^ (bad-whitespace)
C: 16, 0: Exactly one space required after comma
parser.add_argument("-s","--size",help="minimal size of the motifs you want to search for (default: %(default)s)", type=int,default=1)
                                 ^ (bad-whitespace)
C: 16, 0: Exactly one space required after comma
parser.add_argument("-s","--size",help="minimal size of the motifs you want to search for (default: %(default)s)", type=int,default=1)
                                                                                                                           ^ (bad-whitespace)
C: 17, 0: Line too long (188/80) (line-too-long)
C: 17, 0: Exactly one space required after comma
parser.add_argument("-t","--thre",help="phylogenetic prediction threshold to be used, motifs with above phylogenetic score will be selected (default: %(default)s)", type=float,default=0.3)
                        ^ (bad-whitespace)
C: 17, 0: Exactly one space required after comma
parser.add_argument("-t","--thre",help="phylogenetic prediction threshold to be used, motifs with above phylogenetic score will be selected (default: %(default)s)", type=float,default=0.3)
                                 ^ (bad-whitespace)
C: 17, 0: Exactly one space required after comma
parser.add_argument("-t","--thre",help="phylogenetic prediction threshold to be used, motifs with above phylogenetic score will be selected (default: %(default)s)", type=float,default=0.3)
                                                                                                                                                                               ^ (bad-whitespace)
C: 18, 0: Line too long (204/80) (line-too-long)
C: 18, 0: Exactly one space required after comma
parser.add_argument("-a","--align",help="alignment score threshold to be used, only motifs with alignment score higher than this threshold will be selected (default: %(default)s)", type=float,default=0.0)
                        ^ (bad-whitespace)
C: 18, 0: Exactly one space required after comma
parser.add_argument("-a","--align",help="alignment score threshold to be used, only motifs with alignment score higher than this threshold will be selected (default: %(default)s)", type=float,default=0.0)
                                  ^ (bad-whitespace)
C: 18, 0: Exactly one space required after comma
parser.add_argument("-a","--align",help="alignment score threshold to be used, only motifs with alignment score higher than this threshold will be selected (default: %(default)s)", type=float,default=0.0)
                                                                                                                                                                                               ^ (bad-whitespace)
C: 19, 0: Line too long (118/80) (line-too-long)
C: 19, 0: Exactly one space required after comma
parser.add_argument("-o","--out",help="name and location of output file (default: %(default)s)",default="results.txt")
                        ^ (bad-whitespace)
C: 19, 0: Exactly one space required after comma
parser.add_argument("-o","--out",help="name and location of output file (default: %(default)s)",default="results.txt")
                                ^ (bad-whitespace)
C: 19, 0: Exactly one space required after comma
parser.add_argument("-o","--out",help="name and location of output file (default: %(default)s)",default="results.txt")
                                                                                               ^ (bad-whitespace)
C: 23, 0: Exactly one space required after comma
p = SeqParser(args.mpd,args.pred)
                      ^ (bad-whitespace)
C: 25, 0: Exactly one space required after comma
p.motifs(args.thre,args.size,args.align)
                  ^ (bad-whitespace)
C: 25, 0: Exactly one space required after comma
p.motifs(args.thre,args.size,args.align)
                            ^ (bad-whitespace)
C:  1, 0: Missing module docstring (missing-docstring)
W:  8, 0: Relative import 'parser', should be 'bin.bigfoot.parser' (relative-import)
C: 12, 0: Invalid constant name "parser" (invalid-name)
C: 21, 0: Invalid constant name "args" (invalid-name)
C: 23, 0: Invalid constant name "p" (invalid-name)
************* Module bin.bigfoot.weight
W: 10, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 17, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 17, 0: Exactly one space required after comma
	def __init__(self,line):
                  ^ (bad-whitespace)
W: 18, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 21, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 22, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 23, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 26, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 27, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 29, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 32, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 33, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 35, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 36, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 39, 0: Line too long (84/80) (line-too-long)
W: 39, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 39, 0: Exactly one space required after comma
		return "name: {}\nlength: {}\nseq: {}".format(self._name,len(self._seq),self._seq)
                                                          ^ (bad-whitespace)
C: 39, 0: Exactly one space required after comma
		return "name: {}\nlength: {}\nseq: {}".format(self._name,len(self._seq),self._seq)
                                                                         ^ (bad-whitespace)
W: 41, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 42, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 44, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 44, 0: Exactly one space required after comma
	def __getitem__(self,num):
                     ^ (bad-whitespace)
W: 45, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 46, 0: Line too long (127/80) (line-too-long)
W: 49, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 50, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 52, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 52, 0: Exactly one space required after comma
	def __getslice__(self,beg,end):
                      ^ (bad-whitespace)
C: 52, 0: Exactly one space required after comma
	def __getslice__(self,beg,end):
                          ^ (bad-whitespace)
W: 53, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 60, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 61, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 63, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 64, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 67, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 69, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 69, 0: Exactly one space required after comma
	def weight(self,pred,mpd):
                ^ (bad-whitespace)
C: 69, 0: Exactly one space required after comma
	def weight(self,pred,mpd):
                     ^ (bad-whitespace)
W: 70, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 71, 0: Line too long (93/80) (line-too-long)
W: 76, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 79, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 79, 0: Exactly one space required after comma
		with open(pred,"r") as f:
                ^ (bad-whitespace)
W: 80, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 81, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 82, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 83, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 84, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 85, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 85, 0: Exactly one space required after comma
				weighted.append([c,num])
                      ^ (bad-whitespace)
W: 88, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 88, 0: Exactly one space required after comma
		with open(mpd,"r") as f:
               ^ (bad-whitespace)
W: 89, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 90, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 90, 0: Exactly one space required after comma
			for i,line in enumerate(f.readlines()):
        ^ (bad-whitespace)
W: 91, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 92, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 93, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 94, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 95, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 96, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 96, 0: Exactly one space required after comma
			for i,line in enumerate(f.readlines()):
        ^ (bad-whitespace)
W: 97, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 97, 0: Exactly one space required around comparison
				if i>=j:
        ^^ (bad-whitespace)
W: 98, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 98, 0: Exactly one space required after comma
					weighted[i-j].insert(2,float(line)) #insert the alignment score
                           ^ (bad-whitespace)
W:100, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:102, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:102, 0: Exactly one space required after comma
	def motifs(self,thre,size,align):
                ^ (bad-whitespace)
C:102, 0: Exactly one space required after comma
	def motifs(self,thre,size,align):
                     ^ (bad-whitespace)
C:102, 0: Exactly one space required after comma
	def motifs(self,thre,size,align):
                          ^ (bad-whitespace)
W:103, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:104, 0: Line too long (95/80) (line-too-long)
C:105, 0: Line too long (113/80) (line-too-long)
C:107, 0: Line too long (96/80) (line-too-long)
C:109, 0: Line too long (97/80) (line-too-long)
W:111, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:112, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:113, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:114, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:115, 0: Line too long (99/80) (line-too-long)
W:115, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:116, 0: Trailing whitespace (trailing-whitespace)
W:118, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:118, 0: Exactly one space required around comparison
			while pos<len(self._w):
            ^ (bad-whitespace)
C:119, 0: Trailing whitespace (trailing-whitespace)
W:120, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:121, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:122, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:123, 0: Trailing whitespace (trailing-whitespace)
W:124, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:125, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:126, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:127, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:130, 0: Line too long (93/80) (line-too-long)
W:130, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:130, 0: Exactly one space required around comparison
				while w>thre and a>align: #if the position appears to have a weight higher than threshold
           ^ (bad-whitespace)
C:130, 0: Exactly one space required around comparison
				while w>thre and a>align: #if the position appears to have a weight higher than threshold
                      ^ (bad-whitespace)
W:131, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:131, 0: Exactly one space required around assignment
					if t==0:
         ^^ (bad-whitespace)
W:132, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:132, 0: Line too long (94/80) (line-too-long)
W:133, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:134, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:135, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:136, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:137, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:138, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:139, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:142, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:143, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:144, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:145, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:146, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:147, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:148, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:149, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:150, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:151, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:153, 0: Line too long (98/80) (line-too-long)
W:154, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:155, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:156, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:157, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:158, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:159, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:159, 0: Exactly one space required after comma
				e.insert(0,sub) #insert in the first position the extracted sequence
              ^ (bad-whitespace)
W:160, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:164, 0: Trailing whitespace (trailing-whitespace)
C: 23, 2: Invalid attribute name "_w" (invalid-name)
C: 79,25: Invalid variable name "f" (invalid-name)
C: 80, 7: Invalid variable name "c" (invalid-name)
C: 88,24: Invalid variable name "f" (invalid-name)
W: 92, 5: Unused variable 'align' (unused-variable)
R:102, 1: Too many local variables (17/15) (too-many-locals)
C:120, 4: Invalid variable name "nt" (invalid-name)
C:121, 4: Invalid variable name "w" (invalid-name)
C:122, 4: Invalid variable name "a" (invalid-name)
C:124, 4: Invalid variable name "t" (invalid-name)
C:126, 4: Invalid variable name "al" (invalid-name)
C:133, 5: Invalid variable name "t" (invalid-name)
C:135, 5: Invalid variable name "nt" (invalid-name)
C:136, 5: Invalid variable name "w" (invalid-name)
C:137, 5: Invalid variable name "a" (invalid-name)
C:139, 5: Invalid variable name "al" (invalid-name)
C:154, 7: Invalid variable name "e" (invalid-name)
W:120, 4: Unused variable 'nt' (unused-variable)
************* Module bin.gff.__init__
C:  1, 0: Final newline missing (missing-final-newline)
************* Module bin.gff
C:  1, 0: Missing module docstring (missing-docstring)
************* Module bin.gff.family
W: 12, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 16, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 16, 0: Exactly one space required after comma
	def __init__(self,line):
                  ^ (bad-whitespace)
W: 17, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 17, 0: Line too long (163/80) (line-too-long)
C: 18, 0: Trailing whitespace (trailing-whitespace)
W: 19, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 20, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 22, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 24, 0: Line too long (83/80) (line-too-long)
W: 24, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 24, 0: Exactly one space required after comma
		name_index = first_substring(line,"WGD") # Assumes that first occurrence of "WGD"
                                   ^ (bad-whitespace)
W: 26, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 28, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 29, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 30, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 32, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 33, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 33, 0: Exactly one space required after comma
		return "Family Name: {}\nGenes: {}".format(self._name,self._genes)
                                                       ^ (bad-whitespace)
W: 35, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 36, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 38, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 38, 0: Exactly one space required after comma
	def __getitem__(self,index):
                     ^ (bad-whitespace)
W: 39, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 41, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 41, 0: Exactly one space required after comma
	def __getslice__(self,start,end):
                      ^ (bad-whitespace)
C: 41, 0: Exactly one space required after comma
	def __getslice__(self,start,end):
                            ^ (bad-whitespace)
W: 42, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 42, 0: Exactly one space required after comma
		return [self._genes[index] for index in xrange(start,end)]
                                                      ^ (bad-whitespace)
W: 44, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 45, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 47, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 48, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 49, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 51, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 52, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 53, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 55, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 56, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 57, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 59, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 60, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 62, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 64, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 65, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 67, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 69, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 69, 0: Exactly one space required after comma
	def name_change(self,new_name):
                     ^ (bad-whitespace)
W: 70, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 71, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 72, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 73, 0: Trailing whitespace (trailing-whitespace)
W: 73, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 77, 0: Exactly one space required after comma
def first_substring(the_list,substring):
                            ^ (bad-whitespace)
W: 78, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 79, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 79, 0: Exactly one space required after comma
	for i,s in enumerate(the_list):
      ^ (bad-whitespace)
W: 80, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 81, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 82, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 85, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 87, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 88, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 89, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 90, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 91, 0: Trailing whitespace (trailing-whitespace)
W: 92, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 94, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 96, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 97, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 98, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 99, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:100, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:102, 0: Exactly one space required after comma
def family_parse(family_file,num=None,header=None):
                            ^ (bad-whitespace)
C:102, 0: Exactly one space required after comma
def family_parse(family_file,num=None,header=None):
                                     ^ (bad-whitespace)
W:103, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:104, 0: Line too long (94/80) (line-too-long)
C:105, 0: Line too long (113/80) (line-too-long)
W:107, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:108, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:110, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:111, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:113, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:114, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:114, 0: Exactly one space required after comma
	with open(family_file,"r") as f:
                      ^ (bad-whitespace)
W:115, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:116, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:116, 0: Exactly one space required after comma
		for i,line in enumerate(f.readlines()):
       ^ (bad-whitespace)
W:117, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:118, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:119, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:120, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:121, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:122, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:123, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:124, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:126, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:126, 0: Exactly one space required after comma
	return family_list,spec
                   ^ (bad-whitespace)
C:128, 0: Exactly one space required after comma
def family_cds(family_list,gff_rec_list,fasta_rec_list,location):
                          ^ (bad-whitespace)
C:128, 0: Exactly one space required after comma
def family_cds(family_list,gff_rec_list,fasta_rec_list,location):
                                       ^ (bad-whitespace)
C:128, 0: Exactly one space required after comma
def family_cds(family_list,gff_rec_list,fasta_rec_list,location):
                                                      ^ (bad-whitespace)
W:129, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:129, 0: Line too long (162/80) (line-too-long)
W:130, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:131, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:132, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:132, 0: Exactly one space required after comma
		for i,gene in enumerate(fam):
       ^ (bad-whitespace)
W:133, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:134, 0: Line too long (104/80) (line-too-long)
W:134, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:134, 0: Exactly one space required after comma
			gene_extract = gff_func.extract_cds(fasta_rec_list[spec],gff_rec_[spec],gene) # Return a list of list
                                                           ^ (bad-whitespace)
C:134, 0: Exactly one space required after comma
			gene_extract = gff_func.extract_cds(fasta_rec_list[spec],gff_rec_[spec],gene) # Return a list of list
                                                                          ^ (bad-whitespace)
W:135, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:136, 0: Trailing whitespace (trailing-whitespace)
W:137, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:137, 0: Exactly one space required after comma
		gff_func.write_fasta(location+fam.name()+".fasta",genes)
                                                   ^ (bad-whitespace)
C:139, 0: Exactly one space required after comma
def family_upstream(family_list,gff_rec_list,fasta_rec_list,length,location):
                               ^ (bad-whitespace)
C:139, 0: Exactly one space required after comma
def family_upstream(family_list,gff_rec_list,fasta_rec_list,length,location):
                                            ^ (bad-whitespace)
C:139, 0: Exactly one space required after comma
def family_upstream(family_list,gff_rec_list,fasta_rec_list,length,location):
                                                           ^ (bad-whitespace)
C:139, 0: Exactly one space required after comma
def family_upstream(family_list,gff_rec_list,fasta_rec_list,length,location):
                                                                  ^ (bad-whitespace)
W:140, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:140, 0: Line too long (163/80) (line-too-long)
W:142, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:143, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:144, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:145, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:146, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:146, 0: Exactly one space required after comma
		for i,gene in enumerate(fam):
       ^ (bad-whitespace)
W:147, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:148, 0: Line too long (123/80) (line-too-long)
W:148, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:148, 0: Exactly one space required after comma
			up_extract,overlap = gff_func.retrieve_up([gene],gff_rec_list[spec],fasta_rec_list[spec],length) # Return a list of list
             ^ (bad-whitespace)
C:148, 0: Exactly one space required after comma
			up_extract,overlap = gff_func.retrieve_up([gene],gff_rec_list[spec],fasta_rec_list[spec],length) # Return a list of list
                                                   ^ (bad-whitespace)
C:148, 0: Exactly one space required after comma
			up_extract,overlap = gff_func.retrieve_up([gene],gff_rec_list[spec],fasta_rec_list[spec],length) # Return a list of list
                                                                      ^ (bad-whitespace)
C:148, 0: Exactly one space required after comma
			up_extract,overlap = gff_func.retrieve_up([gene],gff_rec_list[spec],fasta_rec_list[spec],length) # Return a list of list
                                                                                           ^ (bad-whitespace)
W:149, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:150, 0: Trailing whitespace (trailing-whitespace)
W:151, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:151, 0: Exactly one space required around comparison
			if len(overlap)>0:
                  ^ (bad-whitespace)
W:152, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:153, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:153, 0: Exactly one space required after comparison
		if len(over) >0:
               ^ (bad-whitespace)
W:154, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:154, 0: Exactly one space required after comma
			fam_overlap.append([fam.name(),len(over)])
                                 ^ (bad-whitespace)
W:156, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:156, 0: Exactly one space required after comma
		gff_func.write_fasta(location+fam.name()+".fasta",up)
                                                   ^ (bad-whitespace)
W:158, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:158, 0: Exactly one space required around comparison
	if len(fam_overlap)>0:
                    ^ (bad-whitespace)
W:159, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:160, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:162, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:162, 0: Exactly one space required after comma
		with open(location+"overlap.txt","w") as f:
                                  ^ (bad-whitespace)
W:163, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:164, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:165, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:  1, 0: Missing module docstring (missing-docstring)
W:  7, 0: Relative import 'gff_func', should be 'bin.gff.gff_func' (relative-import)
C: 11, 0: Old-style class defined. (old-style-class)
C: 28, 6: Invalid variable name "s" (invalid-name)
C: 48, 6: Invalid variable name "g" (invalid-name)
C: 64, 6: Invalid variable name "n" (invalid-name)
C: 79, 7: Invalid variable name "s" (invalid-name)
C: 87, 1: Invalid variable name "l" (invalid-name)
C:114,31: Invalid variable name "f" (invalid-name)
E:134,60: Undefined variable 'gff_rec_' (undefined-variable)
W:128,27: Unused argument 'gff_rec_list' (unused-argument)
W:132, 6: Unused variable 'i' (unused-variable)
R:139, 0: Too many local variables (17/15) (too-many-locals)
C:144, 2: Invalid variable name "up" (invalid-name)
C:162,43: Invalid variable name "f" (invalid-name)
W:146, 6: Unused variable 'i' (unused-variable)
W:163, 7: Unused variable 'entry' (unused-variable)
************* Module bin.gff.gff_func
C:  4, 0: Line too long (130/80) (line-too-long)
C:  9, 0: Exactly one space required after comma
def retrieve_up(geneids,gff_dic,fasta_dic,length=100):
                       ^ (bad-whitespace)
C:  9, 0: Exactly one space required after comma
def retrieve_up(geneids,gff_dic,fasta_dic,length=100):
                               ^ (bad-whitespace)
C:  9, 0: Exactly one space required after comma
def retrieve_up(geneids,gff_dic,fasta_dic,length=100):
                                         ^ (bad-whitespace)
W: 10, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 13, 0: Line too long (191/80) (line-too-long)
W: 22, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 23, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 26, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 27, 0: Trailing whitespace (trailing-whitespace)
W: 29, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 30, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 31, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 31, 0: Exactly one space required after comma
			l = find_name(gff_dic,seq_id,g)
                        ^ (bad-whitespace)
C: 31, 0: Exactly one space required after comma
			l = find_name(gff_dic,seq_id,g)
                               ^ (bad-whitespace)
W: 32, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 33, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 33, 0: Exactly one space required after comma
				start,end,strand = l
         ^ (bad-whitespace)
C: 33, 0: Exactly one space required after comma
				start,end,strand = l
             ^ (bad-whitespace)
W: 34, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 35, 0: Trailing whitespace (trailing-whitespace)
W: 36, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 36, 0: Exactly one space required after comma
		seq,overlap = retrieve_up_single(g,seq_id,gff_dic,fasta_dic,length)
     ^ (bad-whitespace)
C: 36, 0: Exactly one space required after comma
		seq,overlap = retrieve_up_single(g,seq_id,gff_dic,fasta_dic,length)
                                    ^ (bad-whitespace)
C: 36, 0: Exactly one space required after comma
		seq,overlap = retrieve_up_single(g,seq_id,gff_dic,fasta_dic,length)
                                           ^ (bad-whitespace)
C: 36, 0: Exactly one space required after comma
		seq,overlap = retrieve_up_single(g,seq_id,gff_dic,fasta_dic,length)
                                                   ^ (bad-whitespace)
C: 36, 0: Exactly one space required after comma
		seq,overlap = retrieve_up_single(g,seq_id,gff_dic,fasta_dic,length)
                                                             ^ (bad-whitespace)
W: 37, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 37, 0: Exactly one space required after comma
		upstream.append([start,end,strand,g,seq_id,seq])
                        ^ (bad-whitespace)
C: 37, 0: Exactly one space required after comma
		upstream.append([start,end,strand,g,seq_id,seq])
                            ^ (bad-whitespace)
C: 37, 0: Exactly one space required after comma
		upstream.append([start,end,strand,g,seq_id,seq])
                                   ^ (bad-whitespace)
C: 37, 0: Exactly one space required after comma
		upstream.append([start,end,strand,g,seq_id,seq])
                                     ^ (bad-whitespace)
C: 37, 0: Exactly one space required after comma
		upstream.append([start,end,strand,g,seq_id,seq])
                                            ^ (bad-whitespace)
C: 38, 0: Trailing whitespace (trailing-whitespace)
W: 40, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 41, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 42, 0: Trailing whitespace (trailing-whitespace)
W: 42, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 42, 0: Exactly one space required after comma
	return upstream,over 
                ^ (bad-whitespace)
C: 46, 0: Exactly one space required after comma
def retrieve_up_single(geneid,seqid,gff_dic,fasta_dic,length=100):
                             ^ (bad-whitespace)
C: 46, 0: Exactly one space required after comma
def retrieve_up_single(geneid,seqid,gff_dic,fasta_dic,length=100):
                                   ^ (bad-whitespace)
C: 46, 0: Exactly one space required after comma
def retrieve_up_single(geneid,seqid,gff_dic,fasta_dic,length=100):
                                           ^ (bad-whitespace)
C: 46, 0: Exactly one space required after comma
def retrieve_up_single(geneid,seqid,gff_dic,fasta_dic,length=100):
                                                     ^ (bad-whitespace)
W: 47, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 48, 0: Line too long (81/80) (line-too-long)
W: 51, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 52, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 53, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 54, 0: Trailing whitespace (trailing-whitespace)
W: 56, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 56, 0: Exactly one space required after comma
		start,end,strand = find_name(gff_dic,seqid,geneid)
       ^ (bad-whitespace)
C: 56, 0: Exactly one space required after comma
		start,end,strand = find_name(gff_dic,seqid,geneid)
           ^ (bad-whitespace)
C: 56, 0: Exactly one space required after comma
		start,end,strand = find_name(gff_dic,seqid,geneid)
                                      ^ (bad-whitespace)
C: 56, 0: Exactly one space required after comma
		start,end,strand = find_name(gff_dic,seqid,geneid)
                                            ^ (bad-whitespace)
C: 58, 0: Line too long (83/80) (line-too-long)
W: 59, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 60, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 61, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 62, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 63, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 64, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 64, 0: Line too long (108/80) (line-too-long)
C: 64, 0: Exactly one space required after comma
				if g.end in xrange(extract,start): # g.end is the last position of gene in sequence, whatever its strand
                              ^ (bad-whitespace)
W: 65, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 66, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 66, 0: Exactly one space required after comma
				elif g.start in xrange(extract,start):
                                  ^ (bad-whitespace)
W: 67, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 67, 0: Line too long (103/80) (line-too-long)
C: 67, 0: Exactly one space required after comma
					print "Detected overlapping element {}\ntype: {} start: {} end: {}".format(g,g.type,g.start,g.end)
                                                                                 ^ (bad-whitespace)
C: 67, 0: Exactly one space required after comma
					print "Detected overlapping element {}\ntype: {} start: {} end: {}".format(g,g.type,g.start,g.end)
                                                                                        ^ (bad-whitespace)
C: 67, 0: Exactly one space required after comma
					print "Detected overlapping element {}\ntype: {} start: {} end: {}".format(g,g.type,g.start,g.end)
                                                                                                ^ (bad-whitespace)
W: 68, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 69, 0: Trailing whitespace (trailing-whitespace)
C: 70, 0: Line too long (197/80) (line-too-long)
W: 70, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 70, 0: Exactly one space required after comma
			return fasta_dic[seqid][extract-1:start-1].reverse_complement().complement(),overlap # extract natural position, reverse the return to begin with first base just before the beginning of the gene
                                                                               ^ (bad-whitespace)
W: 71, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 72, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 73, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 74, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 75, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 76, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 76, 0: Exactly one space required after comma
				if g.start in xrange(end+1,extract+1):
                              ^ (bad-whitespace)
W: 77, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 78, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 78, 0: Exactly one space required after comma
				elif g.end in xrange(end+1,extract+1):
                              ^ (bad-whitespace)
W: 79, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 79, 0: Line too long (103/80) (line-too-long)
C: 79, 0: Exactly one space required after comma
					print "Detected overlapping element {}\ntype: {} start: {} end: {}".format(g,g.type,g.start,g.end)
                                                                                 ^ (bad-whitespace)
C: 79, 0: Exactly one space required after comma
					print "Detected overlapping element {}\ntype: {} start: {} end: {}".format(g,g.type,g.start,g.end)
                                                                                        ^ (bad-whitespace)
C: 79, 0: Exactly one space required after comma
					print "Detected overlapping element {}\ntype: {} start: {} end: {}".format(g,g.type,g.start,g.end)
                                                                                                ^ (bad-whitespace)
W: 80, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 81, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 81, 0: Exactly one space required after comma
			return fasta_dic[seqid][end:extract],overlap
                                       ^ (bad-whitespace)
W: 82, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 83, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 84, 0: Trailing whitespace (trailing-whitespace)
C: 87, 0: Exactly one space required after comma
def fasta_len(fasta_dic,seqid):
                       ^ (bad-whitespace)
W: 88, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 90, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 92, 0: Trailing whitespace (trailing-whitespace)
W: 93, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 94, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 95, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 96, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 97, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:101, 0: Exactly one space required after comma
def retrieve_seq(fasta_dic,uplist):
                          ^ (bad-whitespace)
W:102, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:105, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:108, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:109, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:110, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:111, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:112, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:113, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:114, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:115, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:119, 0: Exactly one space required after comma
def write_fasta(file_name,upseqs):
                         ^ (bad-whitespace)
W:120, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:121, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:122, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:124, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:126, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:127, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:128, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:129, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:130, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:131, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:132, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:134, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:134, 0: Exactly one space required after comma
		ident = "{} | {} | {}-{} | {}".format(seqid,gene,str(start),str(end),strand)
                                             ^ (bad-whitespace)
C:134, 0: Exactly one space required after comma
		ident = "{} | {} | {}-{} | {}".format(seqid,gene,str(start),str(end),strand)
                                                  ^ (bad-whitespace)
C:134, 0: Exactly one space required after comma
		ident = "{} | {} | {}-{} | {}".format(seqid,gene,str(start),str(end),strand)
                                                             ^ (bad-whitespace)
C:134, 0: Exactly one space required after comma
		ident = "{} | {} | {}-{} | {}".format(seqid,gene,str(start),str(end),strand)
                                                                      ^ (bad-whitespace)
W:136, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:136, 0: Exactly one space required after comma
		rec = SeqRecord(seq,id=ident,name=gene,description="")
                     ^ (bad-whitespace)
C:136, 0: Exactly one space required after comma
		rec = SeqRecord(seq,id=ident,name=gene,description="")
                              ^ (bad-whitespace)
C:136, 0: Exactly one space required after comma
		rec = SeqRecord(seq,id=ident,name=gene,description="")
                                        ^ (bad-whitespace)
W:138, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:140, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:141, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:141, 0: Exactly one space required after comma
	SeqIO.write(records,file_name,"fasta")
                    ^ (bad-whitespace)
C:141, 0: Exactly one space required after comma
	SeqIO.write(records,file_name,"fasta")
                              ^ (bad-whitespace)
W:142, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:146, 0: Exactly one space required after comma
def extract_cds(gff_dic,fasta_dic,par_name=None):
                       ^ (bad-whitespace)
C:146, 0: Exactly one space required after comma
def extract_cds(gff_dic,fasta_dic,par_name=None):
                                 ^ (bad-whitespace)
W:147, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:148, 0: Line too long (91/80) (line-too-long)
C:149, 0: Line too long (97/80) (line-too-long)
W:152, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:153, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:154, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:155, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:156, 0: Trailing whitespace (trailing-whitespace)
W:157, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:158, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:159, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:163, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:164, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:165, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:166, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:167, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:167, 0: Exactly one space required after comma
			seq = pg.get_prot_seq(gff_dic,fasta_dic,p)
                                ^ (bad-whitespace)
C:167, 0: Exactly one space required after comma
			seq = pg.get_prot_seq(gff_dic,fasta_dic,p)
                                          ^ (bad-whitespace)
W:169, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:169, 0: Exactly one space required after comma
			interest.append([start,end,strand,name,seq_id,seq])
                         ^ (bad-whitespace)
C:169, 0: Exactly one space required after comma
			interest.append([start,end,strand,name,seq_id,seq])
                             ^ (bad-whitespace)
C:169, 0: Exactly one space required after comma
			interest.append([start,end,strand,name,seq_id,seq])
                                    ^ (bad-whitespace)
C:169, 0: Exactly one space required after comma
			interest.append([start,end,strand,name,seq_id,seq])
                                         ^ (bad-whitespace)
C:169, 0: Exactly one space required after comma
			interest.append([start,end,strand,name,seq_id,seq])
                                                ^ (bad-whitespace)
W:171, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:173, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:174, 0: Trailing whitespace (trailing-whitespace)
W:175, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:176, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:177, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:178, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:179, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:180, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:181, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:182, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:183, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:184, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:186, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:186, 0: Exactly one space required after comma
				seq = pg.get_prot_seq(gff_dic,fasta_dic,trans)
                                 ^ (bad-whitespace)
C:186, 0: Exactly one space required after comma
				seq = pg.get_prot_seq(gff_dic,fasta_dic,trans)
                                           ^ (bad-whitespace)
W:188, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:188, 0: Exactly one space required after comma
				interest.append([start,end,strand,name,seq_id,seq])
                          ^ (bad-whitespace)
C:188, 0: Exactly one space required after comma
				interest.append([start,end,strand,name,seq_id,seq])
                              ^ (bad-whitespace)
C:188, 0: Exactly one space required after comma
				interest.append([start,end,strand,name,seq_id,seq])
                                     ^ (bad-whitespace)
C:188, 0: Exactly one space required after comma
				interest.append([start,end,strand,name,seq_id,seq])
                                          ^ (bad-whitespace)
C:188, 0: Exactly one space required after comma
				interest.append([start,end,strand,name,seq_id,seq])
                                                 ^ (bad-whitespace)
W:189, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:191, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:192, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:194, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:198, 0: Exactly one space required after comma
def find_name(gff_dic,seqid,geneid):
                     ^ (bad-whitespace)
C:198, 0: Exactly one space required after comma
def find_name(gff_dic,seqid,geneid):
                           ^ (bad-whitespace)
W:199, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:200, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:201, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:201, 0: Exactly one space required after comma
	for i,r in enumerate(gff_dic[seqid]):
      ^ (bad-whitespace)
W:202, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:203, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:204, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:205, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:206, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:207, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:208, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:209, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:210, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:211, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:211, 0: Exactly one space required after comma
		return [start,end,strand]
               ^ (bad-whitespace)
C:211, 0: Exactly one space required after comma
		return [start,end,strand]
                   ^ (bad-whitespace)
C:  1, 0: Missing module docstring (missing-docstring)
W:  7, 0: Relative import 'parse_gff_v2', should be 'bin.gff.parse_gff_v2' (relative-import)
R:  9, 0: Too many local variables (16/15) (too-many-locals)
C: 29, 5: Invalid variable name "g" (invalid-name)
C: 31, 3: Invalid variable name "l" (invalid-name)
W: 33, 4: Attempting to unpack a non-sequence defined at line 209 (unpacking-non-sequence)
W: 36, 2: Attempting to unpack a non-sequence defined at line 83 (unpacking-non-sequence)
W: 36,37: Using possibly undefined loop variable 'seq_id' (undefined-loop-variable)
W: 37,38: Using possibly undefined loop variable 'seq_id' (undefined-loop-variable)
W: 52, 2: Statement seems to have no effect (pointless-statement)
W: 56, 2: Attempting to unpack a non-sequence defined at line 209 (unpacking-non-sequence)
C: 63, 7: Invalid variable name "g" (invalid-name)
C: 75, 7: Invalid variable name "g" (invalid-name)
C:108, 5: Invalid variable name "u" (invalid-name)
C:126, 5: Invalid variable name "u" (invalid-name)
C:155, 6: Invalid variable name "p" (invalid-name)
E:177,19: Undefined variable 'g' (undefined-variable)
C:201, 7: Invalid variable name "r" (invalid-name)
************* Module bin.gff.main
C:  9, 0: Trailing whitespace (trailing-whitespace)
W: 10, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 11, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 12, 0: Trailing whitespace (trailing-whitespace)
W: 13, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 14, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 15, 0: Trailing whitespace (trailing-whitespace)
C: 16, 0: Trailing whitespace (trailing-whitespace)
W: 16, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 16, 0: Exactly one space required after comma
	print "Parameters used: {} genes at least, retrieve {}nt".format(num,length)	
                                                                     ^ (bad-whitespace)
W: 19, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 19, 0: Exactly one space required after comma
	fam_parser,spec = fam.family_parse(family_file,num,header)
           ^ (bad-whitespace)
C: 19, 0: Exactly one space required after comma
	fam_parser,spec = fam.family_parse(family_file,num,header)
                                               ^ (bad-whitespace)
C: 19, 0: Exactly one space required after comma
	fam_parser,spec = fam.family_parse(family_file,num,header)
                                                   ^ (bad-whitespace)
W: 21, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 23, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 24, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 25, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 26, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 28, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 29, 0: Trailing whitespace (trailing-whitespace)
W: 30, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 31, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 32, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 33, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 34, 0: Trailing whitespace (trailing-whitespace)
W: 36, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 37, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 38, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 39, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 40, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 43, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 44, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 45, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 46, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 47, 0: Trailing whitespace (trailing-whitespace)
W: 47, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 47, 0: Exactly one space required after comma
		gff_rec[gk] = pg.load_gff(gff_files[gk],["CDS","gene"]) 
                                         ^ (bad-whitespace)
C: 47, 0: Exactly one space required after comma
		gff_rec[gk] = pg.load_gff(gff_files[gk],["CDS","gene"]) 
                                                ^ (bad-whitespace)
W: 48, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 51, 0: Line too long (85/80) (line-too-long)
W: 51, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 51, 0: Exactly one space required after comma
	fam.family_upstream(fam_parser,gff_rec,fasta_rec,400,"data/families/WGD2/upstream/")
                               ^ (bad-whitespace)
C: 51, 0: Exactly one space required after comma
	fam.family_upstream(fam_parser,gff_rec,fasta_rec,400,"data/families/WGD2/upstream/")
                                       ^ (bad-whitespace)
C: 51, 0: Exactly one space required after comma
	fam.family_upstream(fam_parser,gff_rec,fasta_rec,400,"data/families/WGD2/upstream/")
                                                 ^ (bad-whitespace)
C: 51, 0: Exactly one space required after comma
	fam.family_upstream(fam_parser,gff_rec,fasta_rec,400,"data/families/WGD2/upstream/")
                                                     ^ (bad-whitespace)
W: 56, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:  1, 0: Missing module docstring (missing-docstring)
W:  3, 0: Relative import 'parse_gff_v2', should be 'bin.gff.parse_gff_v2' (relative-import)
W:  4, 0: Relative import 'family', should be 'bin.gff.family' (relative-import)
C:  6, 0: Missing function docstring (missing-docstring)
C: 38, 5: Invalid variable name "fk" (invalid-name)
C: 45, 5: Invalid variable name "gk" (invalid-name)
W: 19,12: Unused variable 'spec' (unused-variable)
************* Module bin.gff.parse_gff_v2
C: 24, 0: Exactly one space required before assignment
__author__  = "Uli Koehler"
            ^ (bad-whitespace)
C: 28, 0: Line too long (101/80) (line-too-long)
C: 44, 0: Trailing whitespace (trailing-whitespace)
C: 68, 0: Line too long (85/80) (line-too-long)
C: 76, 0: Line too long (90/80) (line-too-long)
C: 78, 0: Line too long (152/80) (line-too-long)
C: 79, 0: Line too long (91/80) (line-too-long)
C: 85, 0: Line too long (108/80) (line-too-long)
C: 97, 0: Trailing whitespace (trailing-whitespace)
C:112, 0: Line too long (98/80) (line-too-long)
C:114, 0: Line too long (151/80) (line-too-long)
C:115, 0: Line too long (90/80) (line-too-long)
C:120, 0: Line too long (107/80) (line-too-long)
C:122, 0: Line too long (89/80) (line-too-long)
C:125, 0: Trailing whitespace (trailing-whitespace)
C:131, 0: Line too long (86/80) (line-too-long)
C:135, 0: Line too long (180/80) (line-too-long)
C:140, 0: No space allowed before :
        for record in SeqIO.parse(handle, "fasta") :
                                                   ^ (bad-whitespace)
C:146, 0: Trailing whitespace (trailing-whitespace)
C:151, 0: Line too long (161/80) (line-too-long)
C:160, 0: Exactly one space required around assignment
        if len(list_types)==0 or record.type in list_types:
                          ^^ (bad-whitespace)
C:178, 0: Trailing whitespace (trailing-whitespace)
C:180, 0: Trailing whitespace (trailing-whitespace)
C:181, 0: Trailing whitespace (trailing-whitespace)
C: 28, 0: Invalid constant name "gffInfoFields" (invalid-name)
C: 29, 0: Invalid constant name "GFFRecord" (invalid-name)
C: 31, 0: Invalid function name "parseGFFAttributes" (invalid-name)
C: 31, 0: Invalid argument name "attributeString" (invalid-name)
C: 33,31: More than one statement on a single line (multiple-statements)
C: 40, 0: Invalid function name "parseGFF3" (invalid-name)
C: 49, 4: Invalid variable name "openFunc" (invalid-name)
C: 52,37: More than one statement on a single line (multiple-statements)
C: 57,12: Invalid variable name "normalizedInfo" (invalid-name)
W: 70,18: Used * or ** magic (star-args)
W: 74,42: Redefining built-in 'type' (redefined-builtin)
W: 74,38: Redefining built-in 'id' (redefined-builtin)
C: 74, 0: Invalid function name "getSequence" (invalid-name)
C: 74, 0: Invalid argument name "id" (invalid-name)
C: 87, 4: Invalid variable name "ll" (invalid-name)
C: 89, 8: Invalid variable name "gffEntry" (invalid-name)
W:102, 7: Using possibly undefined loop variable 'entry' (undefined-loop-variable)
W:110,39: Redefining built-in 'id' (redefined-builtin)
C:110, 0: Invalid argument name "id" (invalid-name)
W:161,12: Redefining built-in 'id' (redefined-builtin)
C:161,12: Invalid variable name "id" (invalid-name)
W:161,12: Unused variable 'id' (unused-variable)
R:  1, 0: Similar lines in 2 files
==bin.extract_rand_cds:20
==bin.gff.main:18
	fam_parser,spec = fam.family_parse(family_file,num,header)

	fasta_files = {}

	fasta_files["PSEX"] = "data/sexaurelia/sexaurelia_AZ8-4_assembly_v1.fasta"
	fasta_files["PTET"] = "data/tetraurelia/ptetraurelia_mac_51.fa"
	fasta_files["PCAU"] = "data/caudatum/caudatum_43c3d_assembly_v1.fasta"
	fasta_files["PBI"] = "data/biaurelia/biaurelia_V1-4_assembly_v1.fasta"

	gff_files = {}

	gff_files["PSEX"] = "data/sexaurelia/sexaurelia_AZ8-4_annotation_v1.gff3"
	gff_files["PTET"] = "data/tetraurelia/tetraurelia51_EuGene_annotation.gff3"
	gff_files["PCAU"] = "data/caudatum/caudatum_43c3d_annotation_v1.gff3"
	gff_files["PBI"] = "data/biaurelia/biaurelia_V1-4_annotation_v1.gff3"

	# load all fasta files in memory
	fasta_rec = {}
	print "Loading fasta files..."
	for fk in fasta_files.keys(): (duplicate-code)
R:  1, 0: Similar lines in 2 files
==bin.extract_rand_cds:41
==bin.gff.main:38
		fasta_rec[fk] = pg.load_fasta(fasta_files[fk])
	print "Done."

	# load all gff files in memory
	gff_rec = {}
	print "Loading GFF files..."
	for gk in gff_files.keys():
		print "New file..." (duplicate-code)


Report
======
538 statements analysed.

Messages by category
--------------------

+-----------+-------+---------+-----------+
|type       |number |previous |difference |
+===========+=======+=========+===========+
|convention |369    |369      |=          |
+-----------+-------+---------+-----------+
|refactor   |5      |5        |=          |
+-----------+-------+---------+-----------+
|warning    |483    |483      |=          |
+-----------+-------+---------+-----------+
|error      |2      |2        |=          |
+-----------+-------+---------+-----------+



% errors / warnings by module
-----------------------------

+---------------------+------+--------+---------+-----------+
|module               |error |warning |refactor |convention |
+=====================+======+========+=========+===========+
|bin.gff.gff_func     |50.00 |26.92   |20.00    |27.10      |
+---------------------+------+--------+---------+-----------+
|bin.gff.family       |50.00 |22.77   |20.00    |16.26      |
+---------------------+------+--------+---------+-----------+
|bin.bigfoot.weight   |0.00  |19.25   |20.00    |14.36      |
+---------------------+------+--------+---------+-----------+
|bin.bigfoot.parser   |0.00  |15.53   |0.00     |11.11      |
+---------------------+------+--------+---------+-----------+
|bin.extract_rand_cds |0.00  |7.25    |0.00     |5.42       |
+---------------------+------+--------+---------+-----------+
|bin.gff.main         |0.00  |6.63    |0.00     |5.96       |
+---------------------+------+--------+---------+-----------+
|bin.gff.parse_gff_v2 |0.00  |1.45    |40.00    |10.57      |
+---------------------+------+--------+---------+-----------+
|bin.bigfoot.setup    |0.00  |0.21    |0.00     |7.05       |
+---------------------+------+--------+---------+-----------+



Messages
--------

+------------------------+------------+
|message id              |occurrences |
+========================+============+
|mixed-indentation       |453         |
+------------------------+------------+
|bad-whitespace          |193         |
+------------------------+------------+
|line-too-long           |58          |
+------------------------+------------+
|invalid-name            |57          |
+------------------------+------------+
|trailing-whitespace     |43          |
+------------------------+------------+
|missing-docstring       |12          |
+------------------------+------------+
|unused-variable         |9           |
+------------------------+------------+
|relative-import         |8           |
+------------------------+------------+
|redefined-builtin       |4           |
+------------------------+------------+
|unpacking-non-sequence  |3           |
+------------------------+------------+
|undefined-loop-variable |3           |
+------------------------+------------+
|too-many-locals         |3           |
+------------------------+------------+
|missing-final-newline   |3           |
+------------------------+------------+
|undefined-variable      |2           |
+------------------------+------------+
|multiple-statements     |2           |
+------------------------+------------+
|duplicate-code          |2           |
+------------------------+------------+
|unused-argument         |1           |
+------------------------+------------+
|star-args               |1           |
+------------------------+------------+
|pointless-statement     |1           |
+------------------------+------------+
|old-style-class         |1           |
+------------------------+------------+



Global evaluation
-----------------
Your code has been rated at -6.12/10 (previous run: -6.12/10, +0.00)

Duplication
-----------

+-------------------------+------+---------+-----------+
|                         |now   |previous |difference |
+=========================+======+=========+===========+
|nb duplicated lines      |28    |28       |=          |
+-------------------------+------+---------+-----------+
|percent duplicated lines |2.770 |2.770    |=          |
+-------------------------+------+---------+-----------+



External dependencies
---------------------
::

    Bio (bin.gff.parse_gff_v2)
      \-Seq 
      | \-Seq (bin.gff.parse_gff_v2)
      \-SeqIO (bin.gff.parse_gff_v2,bin.gff.gff_func)
      \-SeqRecord 
        \-SeqRecord (bin.gff.gff_func)



Raw metrics
-----------

+----------+-------+------+---------+-----------+
|type      |number |%     |previous |difference |
+==========+=======+======+=========+===========+
|code      |536    |60.91 |536      |=          |
+----------+-------+------+---------+-----------+
|docstring |175    |19.89 |175      |=          |
+----------+-------+------+---------+-----------+
|comment   |75     |8.52  |75       |=          |
+----------+-------+------+---------+-----------+
|empty     |94     |10.68 |94       |=          |
+----------+-------+------+---------+-----------+



Statistics by type
------------------

+---------+-------+-----------+-----------+------------+---------+
|type     |number |old number |difference |%documented |%badname |
+=========+=======+===========+===========+============+=========+
|module   |12     |12         |=          |16.67       |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|class    |3      |3          |=          |100.00      |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|method   |25     |25         |=          |100.00      |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|function |20     |20         |=          |90.00       |15.00    |
+---------+-------+-----------+-----------+------------+---------+



************* Module bin
C:  1, 0: Final newline missing (missing-final-newline)
C:  1, 0: Missing module docstring (missing-docstring)
************* Module bin.extract_rand_cds
C: 10, 0: Trailing whitespace (trailing-whitespace)
W: 11, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 12, 0: Trailing whitespace (trailing-whitespace)
W: 13, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 14, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 16, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 17, 0: Trailing whitespace (trailing-whitespace)
C: 18, 0: Trailing whitespace (trailing-whitespace)
W: 18, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 18, 0: Exactly one space required after comma
	print "Parameters used: {} genes at least, retrieve {} CDSs".format(num,cds)	
                                                                        ^ (bad-whitespace)
W: 21, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 21, 0: Exactly one space required after comma
	fam_parser,spec = fam.family_parse(family_file,num,header)
           ^ (bad-whitespace)
C: 21, 0: Exactly one space required after comma
	fam_parser,spec = fam.family_parse(family_file,num,header)
                                               ^ (bad-whitespace)
C: 21, 0: Exactly one space required after comma
	fam_parser,spec = fam.family_parse(family_file,num,header)
                                                   ^ (bad-whitespace)
W: 23, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 25, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 26, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 27, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 28, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 30, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 31, 0: Trailing whitespace (trailing-whitespace)
W: 32, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 33, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 34, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 35, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 36, 0: Trailing whitespace (trailing-whitespace)
W: 38, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 39, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 40, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 41, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 42, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 43, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 46, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 47, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 48, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 49, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 50, 0: Trailing whitespace (trailing-whitespace)
W: 50, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 50, 0: Exactly one space required after comma
		gff_rec[gk] = pg.load_gff(gff_files[gk],["CDS"]) 
                                         ^ (bad-whitespace)
W: 51, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 54, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 54, 0: Exactly one space required after comma
	fam_rand = random.sample(fam_parser,cds)
                                    ^ (bad-whitespace)
W: 56, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 58, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 58, 0: Exactly one space required after comma
	fam.family_cds(fam_rand,gff_rec,fasta_rec,"data/families/WGD1/CDS/")
                        ^ (bad-whitespace)
C: 58, 0: Exactly one space required after comma
	fam.family_cds(fam_rand,gff_rec,fasta_rec,"data/families/WGD1/CDS/")
                                ^ (bad-whitespace)
C: 58, 0: Exactly one space required after comma
	fam.family_cds(fam_rand,gff_rec,fasta_rec,"data/families/WGD1/CDS/")
                                          ^ (bad-whitespace)
W: 62, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:  1, 0: Missing module docstring (missing-docstring)
W:  3, 0: Relative import 'gff.parse_gff_v2', should be 'bin.gff.parse_gff_v2' (relative-import)
W:  4, 0: Relative import 'gff.family', should be 'bin.gff.family' (relative-import)
C:  7, 0: Missing function docstring (missing-docstring)
C: 40, 5: Invalid variable name "fk" (invalid-name)
C: 48, 5: Invalid variable name "gk" (invalid-name)
W: 21,12: Unused variable 'spec' (unused-variable)
************* Module bin.profiling
C:  6, 0: Exactly one space required after comma
profile.run("from gff import main; main.main()","results/profile1803_2.tmp")
                                               ^ (bad-whitespace)
C:  1, 0: Missing module docstring (missing-docstring)
************* Module bin.bigfoot.__init__
C:  1, 0: Final newline missing (missing-final-newline)
************* Module bin.bigfoot
C:  1, 0: Missing module docstring (missing-docstring)
************* Module bin.bigfoot.parser
W: 11, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 12, 0: Line too long (128/80) (line-too-long)
W: 15, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 15, 0: Exactly one space required after comma
	def __init__(self,seqfile,predfile):
                  ^ (bad-whitespace)
C: 15, 0: Exactly one space required after comma
	def __init__(self,seqfile,predfile):
                          ^ (bad-whitespace)
W: 16, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 21, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 22, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 23, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 24, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 26, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 28, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 28, 0: Line too long (83/80) (line-too-long)
C: 28, 0: Exactly one space required after comma
		s = "Sequence File: {}\nPrediction File: {}".format(self._seqfile,self._predfile)
                                                                   ^ (bad-whitespace)
W: 30, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 32, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 33, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 35, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 36, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 40, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 42, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 44, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 44, 0: Exactly one space required after comma
			with open(self._seqfile,"r") as f:
                          ^ (bad-whitespace)
W: 45, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 45, 0: Exactly one space required after comma
				for i,l in enumerate(f.readlines()):
         ^ (bad-whitespace)
W: 46, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 47, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 48, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 49, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 51, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 53, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 54, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 55, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 57, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 57, 0: Exactly one space required after comma
	def motifs(self,thre,size,align):
                ^ (bad-whitespace)
C: 57, 0: Exactly one space required after comma
	def motifs(self,thre,size,align):
                     ^ (bad-whitespace)
C: 57, 0: Exactly one space required after comma
	def motifs(self,thre,size,align):
                          ^ (bad-whitespace)
W: 58, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 59, 0: Line too long (106/80) (line-too-long)
W: 62, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 63, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 64, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 65, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 66, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 67, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 68, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 69, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 71, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 71, 0: Exactly one space required after comma
		seqs[0].weight(self._predfile,self._seqfile) #weight first sequence
                               ^ (bad-whitespace)
W: 72, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 73, 0: Line too long (98/80) (line-too-long)
W: 73, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 73, 0: Exactly one space required after comma
		known = seqs[0].motifs(thre,size,align) #extract motifs with given threshold from first sequence
                             ^ (bad-whitespace)
C: 73, 0: Exactly one space required after comma
		known = seqs[0].motifs(thre,size,align) #extract motifs with given threshold from first sequence
                                  ^ (bad-whitespace)
W: 75, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 77, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 77, 0: Exactly one space required after comma
		for i,k in enumerate(known):
       ^ (bad-whitespace)
W: 79, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 81, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 83, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 84, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 85, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 86, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 86, 0: Exactly one space required before assignment
			mot[name]["size"]  = k[2] - k[1] + 1 #compute the size of the motif
                      ^ (bad-whitespace)
W: 87, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 89, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 90, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 92, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 93, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 94, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 95, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 97, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 99, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 99, 0: Exactly one space required after comma
	def write(self,output):
               ^ (bad-whitespace)
W:100, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:101, 0: Line too long (81/80) (line-too-long)
W:104, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:105, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:106, 0: Trailing whitespace (trailing-whitespace)
W:107, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:108, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:109, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:110, 0: Trailing whitespace (trailing-whitespace)
W:111, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:111, 0: Exactly one space required after comma
		with open(output,"w") as o:
                  ^ (bad-whitespace)
W:114, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:114, 0: Line too long (155/80) (line-too-long)
C:114, 0: Exactly one space required after comma
			print >> o, "Launched:{} GMT Threshold used: {} AlignThreshold: {} Size(over): {}\n".format(strftime("%a, %d %b %Y %H:%M:%S", gmtime()),thre,align,size)
                                                                                                                                          ^ (bad-whitespace)
C:114, 0: Exactly one space required after comma
			print >> o, "Launched:{} GMT Threshold used: {} AlignThreshold: {} Size(over): {}\n".format(strftime("%a, %d %b %Y %H:%M:%S", gmtime()),thre,align,size)
                                                                                                                                               ^ (bad-whitespace)
C:114, 0: Exactly one space required after comma
			print >> o, "Launched:{} GMT Threshold used: {} AlignThreshold: {} Size(over): {}\n".format(strftime("%a, %d %b %Y %H:%M:%S", gmtime()),thre,align,size)
                                                                                                                                                     ^ (bad-whitespace)
W:115, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:116, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:117, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:120, 0: Line too long (170/80) (line-too-long)
W:120, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:120, 0: Exactly one space required after comma
					print >> o, "\n{} Start: {} Stop: {} AvgPhylogeneticScore: {} AvgAlignScore: {} Size: {}\n".format(k,smk["start"],smk["stop"],smk["score"],smk["align"], smk["size"])
                                                                                                         ^ (bad-whitespace)
C:120, 0: Exactly one space required after comma
					print >> o, "\n{} Start: {} Stop: {} AvgPhylogeneticScore: {} AvgAlignScore: {} Size: {}\n".format(k,smk["start"],smk["stop"],smk["score"],smk["align"], smk["size"])
                                                                                                                      ^ (bad-whitespace)
C:120, 0: Exactly one space required after comma
					print >> o, "\n{} Start: {} Stop: {} AvgPhylogeneticScore: {} AvgAlignScore: {} Size: {}\n".format(k,smk["start"],smk["stop"],smk["score"],smk["align"], smk["size"])
                                                                                                                                  ^ (bad-whitespace)
C:120, 0: Exactly one space required after comma
					print >> o, "\n{} Start: {} Stop: {} AvgPhylogeneticScore: {} AvgAlignScore: {} Size: {}\n".format(k,smk["start"],smk["stop"],smk["score"],smk["align"], smk["size"])
                                                                                                                                               ^ (bad-whitespace)
W:122, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:123, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:125, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:126, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:126, 0: Line too long (88/80) (line-too-long)
W:127, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:127, 0: Exactly one space required after comma
							print >> o, "{0:20} {1}".format(s,smk[s].upper())
                                        ^ (bad-whitespace)
C:129, 0: Trailing whitespace (trailing-whitespace)
C:  1, 0: Missing module docstring (missing-docstring)
W:  7, 0: Relative import 'weight', should be 'bin.bigfoot.weight' (relative-import)
C: 28, 2: Invalid variable name "s" (invalid-name)
C: 44,35: Invalid variable name "f" (invalid-name)
C: 45,10: Invalid variable name "l" (invalid-name)
W: 45, 8: Unused variable 'i' (unused-variable)
C: 89, 7: Invalid variable name "s" (invalid-name)
C:111,27: Invalid variable name "o" (invalid-name)
C:125, 9: Invalid variable name "s" (invalid-name)
************* Module bin.bigfoot.setup
C: 12, 0: Line too long (304/80) (line-too-long)
C: 15, 0: Line too long (98/80) (line-too-long)
C: 15, 0: Exactly one space required after comma
parser.add_argument("pred",help=".pred file generated by BigFoot. (Phylogenetic prediction file)")
                          ^ (bad-whitespace)
C: 16, 0: Line too long (134/80) (line-too-long)
C: 16, 0: Exactly one space required after comma
parser.add_argument("-s","--size",help="minimal size of the motifs you want to search for (default: %(default)s)", type=int,default=1)
                        ^ (bad-whitespace)
C: 16, 0: Exactly one space required after comma
parser.add_argument("-s","--size",help="minimal size of the motifs you want to search for (default: %(default)s)", type=int,default=1)
                                 ^ (bad-whitespace)
C: 16, 0: Exactly one space required after comma
parser.add_argument("-s","--size",help="minimal size of the motifs you want to search for (default: %(default)s)", type=int,default=1)
                                                                                                                           ^ (bad-whitespace)
C: 17, 0: Line too long (188/80) (line-too-long)
C: 17, 0: Exactly one space required after comma
parser.add_argument("-t","--thre",help="phylogenetic prediction threshold to be used, motifs with above phylogenetic score will be selected (default: %(default)s)", type=float,default=0.3)
                        ^ (bad-whitespace)
C: 17, 0: Exactly one space required after comma
parser.add_argument("-t","--thre",help="phylogenetic prediction threshold to be used, motifs with above phylogenetic score will be selected (default: %(default)s)", type=float,default=0.3)
                                 ^ (bad-whitespace)
C: 17, 0: Exactly one space required after comma
parser.add_argument("-t","--thre",help="phylogenetic prediction threshold to be used, motifs with above phylogenetic score will be selected (default: %(default)s)", type=float,default=0.3)
                                                                                                                                                                               ^ (bad-whitespace)
C: 18, 0: Line too long (204/80) (line-too-long)
C: 18, 0: Exactly one space required after comma
parser.add_argument("-a","--align",help="alignment score threshold to be used, only motifs with alignment score higher than this threshold will be selected (default: %(default)s)", type=float,default=0.0)
                        ^ (bad-whitespace)
C: 18, 0: Exactly one space required after comma
parser.add_argument("-a","--align",help="alignment score threshold to be used, only motifs with alignment score higher than this threshold will be selected (default: %(default)s)", type=float,default=0.0)
                                  ^ (bad-whitespace)
C: 18, 0: Exactly one space required after comma
parser.add_argument("-a","--align",help="alignment score threshold to be used, only motifs with alignment score higher than this threshold will be selected (default: %(default)s)", type=float,default=0.0)
                                                                                                                                                                                               ^ (bad-whitespace)
C: 19, 0: Line too long (118/80) (line-too-long)
C: 19, 0: Exactly one space required after comma
parser.add_argument("-o","--out",help="name and location of output file (default: %(default)s)",default="results.txt")
                        ^ (bad-whitespace)
C: 19, 0: Exactly one space required after comma
parser.add_argument("-o","--out",help="name and location of output file (default: %(default)s)",default="results.txt")
                                ^ (bad-whitespace)
C: 19, 0: Exactly one space required after comma
parser.add_argument("-o","--out",help="name and location of output file (default: %(default)s)",default="results.txt")
                                                                                               ^ (bad-whitespace)
C: 23, 0: Exactly one space required after comma
p = SeqParser(args.mpd,args.pred)
                      ^ (bad-whitespace)
C: 25, 0: Exactly one space required after comma
p.motifs(args.thre,args.size,args.align)
                  ^ (bad-whitespace)
C: 25, 0: Exactly one space required after comma
p.motifs(args.thre,args.size,args.align)
                            ^ (bad-whitespace)
C:  1, 0: Missing module docstring (missing-docstring)
W:  8, 0: Relative import 'parser', should be 'bin.bigfoot.parser' (relative-import)
C: 12, 0: Invalid constant name "parser" (invalid-name)
C: 21, 0: Invalid constant name "args" (invalid-name)
C: 23, 0: Invalid constant name "p" (invalid-name)
************* Module bin.bigfoot.weight
W: 10, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 17, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 17, 0: Exactly one space required after comma
	def __init__(self,line):
                  ^ (bad-whitespace)
W: 18, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 21, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 22, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 23, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 26, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 27, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 29, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 32, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 33, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 35, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 36, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 39, 0: Line too long (84/80) (line-too-long)
W: 39, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 39, 0: Exactly one space required after comma
		return "name: {}\nlength: {}\nseq: {}".format(self._name,len(self._seq),self._seq)
                                                          ^ (bad-whitespace)
C: 39, 0: Exactly one space required after comma
		return "name: {}\nlength: {}\nseq: {}".format(self._name,len(self._seq),self._seq)
                                                                         ^ (bad-whitespace)
W: 41, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 42, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 44, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 44, 0: Exactly one space required after comma
	def __getitem__(self,num):
                     ^ (bad-whitespace)
W: 45, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 46, 0: Line too long (127/80) (line-too-long)
W: 49, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 50, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 52, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 52, 0: Exactly one space required after comma
	def __getslice__(self,beg,end):
                      ^ (bad-whitespace)
C: 52, 0: Exactly one space required after comma
	def __getslice__(self,beg,end):
                          ^ (bad-whitespace)
W: 53, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 60, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 61, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 63, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 64, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 67, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 69, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 69, 0: Exactly one space required after comma
	def weight(self,pred,mpd):
                ^ (bad-whitespace)
C: 69, 0: Exactly one space required after comma
	def weight(self,pred,mpd):
                     ^ (bad-whitespace)
W: 70, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 71, 0: Line too long (93/80) (line-too-long)
W: 76, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 79, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 79, 0: Exactly one space required after comma
		with open(pred,"r") as f:
                ^ (bad-whitespace)
W: 80, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 81, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 82, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 83, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 84, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 85, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 85, 0: Exactly one space required after comma
				weighted.append([c,num])
                      ^ (bad-whitespace)
W: 88, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 88, 0: Exactly one space required after comma
		with open(mpd,"r") as f:
               ^ (bad-whitespace)
W: 89, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 90, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 90, 0: Exactly one space required after comma
			for i,line in enumerate(f.readlines()):
        ^ (bad-whitespace)
W: 91, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 92, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 93, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 94, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 95, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 96, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 96, 0: Exactly one space required after comma
			for i,line in enumerate(f.readlines()):
        ^ (bad-whitespace)
W: 97, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 97, 0: Exactly one space required around comparison
				if i>=j:
        ^^ (bad-whitespace)
W: 98, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 98, 0: Exactly one space required after comma
					weighted[i-j].insert(2,float(line)) #insert the alignment score
                           ^ (bad-whitespace)
W:100, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:102, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:102, 0: Exactly one space required after comma
	def motifs(self,thre,size,align):
                ^ (bad-whitespace)
C:102, 0: Exactly one space required after comma
	def motifs(self,thre,size,align):
                     ^ (bad-whitespace)
C:102, 0: Exactly one space required after comma
	def motifs(self,thre,size,align):
                          ^ (bad-whitespace)
W:103, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:104, 0: Line too long (95/80) (line-too-long)
C:105, 0: Line too long (113/80) (line-too-long)
C:107, 0: Line too long (96/80) (line-too-long)
C:109, 0: Line too long (97/80) (line-too-long)
W:111, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:112, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:113, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:114, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:115, 0: Line too long (99/80) (line-too-long)
W:115, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:116, 0: Trailing whitespace (trailing-whitespace)
W:118, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:118, 0: Exactly one space required around comparison
			while pos<len(self._w):
            ^ (bad-whitespace)
C:119, 0: Trailing whitespace (trailing-whitespace)
W:120, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:121, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:122, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:123, 0: Trailing whitespace (trailing-whitespace)
W:124, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:125, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:126, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:127, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:130, 0: Line too long (93/80) (line-too-long)
W:130, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:130, 0: Exactly one space required around comparison
				while w>thre and a>align: #if the position appears to have a weight higher than threshold
           ^ (bad-whitespace)
C:130, 0: Exactly one space required around comparison
				while w>thre and a>align: #if the position appears to have a weight higher than threshold
                      ^ (bad-whitespace)
W:131, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:131, 0: Exactly one space required around assignment
					if t==0:
         ^^ (bad-whitespace)
W:132, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:132, 0: Line too long (94/80) (line-too-long)
W:133, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:134, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:135, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:136, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:137, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:138, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:139, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:142, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:143, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:144, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:145, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:146, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:147, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:148, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:149, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:150, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:151, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:153, 0: Line too long (98/80) (line-too-long)
W:154, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:155, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:156, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:157, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:158, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:159, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:159, 0: Exactly one space required after comma
				e.insert(0,sub) #insert in the first position the extracted sequence
              ^ (bad-whitespace)
W:160, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:164, 0: Trailing whitespace (trailing-whitespace)
C: 23, 2: Invalid attribute name "_w" (invalid-name)
C: 79,25: Invalid variable name "f" (invalid-name)
C: 80, 7: Invalid variable name "c" (invalid-name)
C: 88,24: Invalid variable name "f" (invalid-name)
W: 92, 5: Unused variable 'align' (unused-variable)
R:102, 1: Too many local variables (17/15) (too-many-locals)
C:120, 4: Invalid variable name "nt" (invalid-name)
C:121, 4: Invalid variable name "w" (invalid-name)
C:122, 4: Invalid variable name "a" (invalid-name)
C:124, 4: Invalid variable name "t" (invalid-name)
C:126, 4: Invalid variable name "al" (invalid-name)
C:133, 5: Invalid variable name "t" (invalid-name)
C:135, 5: Invalid variable name "nt" (invalid-name)
C:136, 5: Invalid variable name "w" (invalid-name)
C:137, 5: Invalid variable name "a" (invalid-name)
C:139, 5: Invalid variable name "al" (invalid-name)
C:154, 7: Invalid variable name "e" (invalid-name)
W:120, 4: Unused variable 'nt' (unused-variable)
************* Module bin.gff.__init__
C:  1, 0: Final newline missing (missing-final-newline)
************* Module bin.gff
C:  1, 0: Missing module docstring (missing-docstring)
************* Module bin.gff.family
W: 12, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 16, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 16, 0: Exactly one space required after comma
	def __init__(self,line):
                  ^ (bad-whitespace)
W: 17, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 17, 0: Line too long (163/80) (line-too-long)
C: 18, 0: Trailing whitespace (trailing-whitespace)
W: 19, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 20, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 22, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 24, 0: Line too long (83/80) (line-too-long)
W: 24, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 24, 0: Exactly one space required after comma
		name_index = first_substring(line,"WGD") # Assumes that first occurrence of "WGD"
                                   ^ (bad-whitespace)
W: 26, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 28, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 29, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 30, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 32, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 33, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 33, 0: Exactly one space required after comma
		return "Family Name: {}\nGenes: {}".format(self._name,self._genes)
                                                       ^ (bad-whitespace)
W: 35, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 36, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 38, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 38, 0: Exactly one space required after comma
	def __getitem__(self,index):
                     ^ (bad-whitespace)
W: 39, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 41, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 41, 0: Exactly one space required after comma
	def __getslice__(self,start,end):
                      ^ (bad-whitespace)
C: 41, 0: Exactly one space required after comma
	def __getslice__(self,start,end):
                            ^ (bad-whitespace)
W: 42, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 42, 0: Exactly one space required after comma
		return [self._genes[index] for index in xrange(start,end)]
                                                      ^ (bad-whitespace)
W: 44, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 45, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 47, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 48, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 49, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 51, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 52, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 53, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 55, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 56, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 57, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 59, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 60, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 62, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 64, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 65, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 67, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 69, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 69, 0: Exactly one space required after comma
	def name_change(self,new_name):
                     ^ (bad-whitespace)
W: 70, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 71, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 72, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 73, 0: Trailing whitespace (trailing-whitespace)
W: 73, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 77, 0: Exactly one space required after comma
def first_substring(the_list,substring):
                            ^ (bad-whitespace)
W: 78, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 79, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 79, 0: Exactly one space required after comma
	for i,s in enumerate(the_list):
      ^ (bad-whitespace)
W: 80, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 81, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 82, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 85, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 87, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 88, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 89, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 90, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 91, 0: Trailing whitespace (trailing-whitespace)
W: 92, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 94, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 96, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 97, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 98, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 99, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:100, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:102, 0: Exactly one space required after comma
def family_parse(family_file,num=None,header=None):
                            ^ (bad-whitespace)
C:102, 0: Exactly one space required after comma
def family_parse(family_file,num=None,header=None):
                                     ^ (bad-whitespace)
W:103, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:104, 0: Line too long (94/80) (line-too-long)
C:105, 0: Line too long (113/80) (line-too-long)
W:107, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:108, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:110, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:111, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:113, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:114, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:114, 0: Exactly one space required after comma
	with open(family_file,"r") as f:
                      ^ (bad-whitespace)
W:115, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:116, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:116, 0: Exactly one space required after comma
		for i,line in enumerate(f.readlines()):
       ^ (bad-whitespace)
W:117, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:118, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:119, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:120, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:121, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:122, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:123, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:124, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:126, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:126, 0: Exactly one space required after comma
	return family_list,spec
                   ^ (bad-whitespace)
C:128, 0: Exactly one space required after comma
def family_cds(family_list,gff_rec_list,fasta_rec_list,location):
                          ^ (bad-whitespace)
C:128, 0: Exactly one space required after comma
def family_cds(family_list,gff_rec_list,fasta_rec_list,location):
                                       ^ (bad-whitespace)
C:128, 0: Exactly one space required after comma
def family_cds(family_list,gff_rec_list,fasta_rec_list,location):
                                                      ^ (bad-whitespace)
W:129, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:129, 0: Line too long (162/80) (line-too-long)
W:130, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:131, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:132, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:132, 0: Exactly one space required after comma
		for i,gene in enumerate(fam):
       ^ (bad-whitespace)
W:133, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:134, 0: Line too long (104/80) (line-too-long)
W:134, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:134, 0: Exactly one space required after comma
			gene_extract = gff_func.extract_cds(fasta_rec_list[spec],gff_rec_[spec],gene) # Return a list of list
                                                           ^ (bad-whitespace)
C:134, 0: Exactly one space required after comma
			gene_extract = gff_func.extract_cds(fasta_rec_list[spec],gff_rec_[spec],gene) # Return a list of list
                                                                          ^ (bad-whitespace)
W:135, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:136, 0: Trailing whitespace (trailing-whitespace)
W:137, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:137, 0: Exactly one space required after comma
		gff_func.write_fasta(location+fam.name()+".fasta",genes)
                                                   ^ (bad-whitespace)
C:139, 0: Exactly one space required after comma
def family_upstream(family_list,gff_rec_list,fasta_rec_list,length,location):
                               ^ (bad-whitespace)
C:139, 0: Exactly one space required after comma
def family_upstream(family_list,gff_rec_list,fasta_rec_list,length,location):
                                            ^ (bad-whitespace)
C:139, 0: Exactly one space required after comma
def family_upstream(family_list,gff_rec_list,fasta_rec_list,length,location):
                                                           ^ (bad-whitespace)
C:139, 0: Exactly one space required after comma
def family_upstream(family_list,gff_rec_list,fasta_rec_list,length,location):
                                                                  ^ (bad-whitespace)
W:140, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:140, 0: Line too long (163/80) (line-too-long)
W:142, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:143, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:144, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:145, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:146, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:146, 0: Exactly one space required after comma
		for i,gene in enumerate(fam):
       ^ (bad-whitespace)
W:147, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:148, 0: Line too long (123/80) (line-too-long)
W:148, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:148, 0: Exactly one space required after comma
			up_extract,overlap = gff_func.retrieve_up([gene],gff_rec_list[spec],fasta_rec_list[spec],length) # Return a list of list
             ^ (bad-whitespace)
C:148, 0: Exactly one space required after comma
			up_extract,overlap = gff_func.retrieve_up([gene],gff_rec_list[spec],fasta_rec_list[spec],length) # Return a list of list
                                                   ^ (bad-whitespace)
C:148, 0: Exactly one space required after comma
			up_extract,overlap = gff_func.retrieve_up([gene],gff_rec_list[spec],fasta_rec_list[spec],length) # Return a list of list
                                                                      ^ (bad-whitespace)
C:148, 0: Exactly one space required after comma
			up_extract,overlap = gff_func.retrieve_up([gene],gff_rec_list[spec],fasta_rec_list[spec],length) # Return a list of list
                                                                                           ^ (bad-whitespace)
W:149, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:150, 0: Trailing whitespace (trailing-whitespace)
W:151, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:151, 0: Exactly one space required around comparison
			if len(overlap)>0:
                  ^ (bad-whitespace)
W:152, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:153, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:153, 0: Exactly one space required after comparison
		if len(over) >0:
               ^ (bad-whitespace)
W:154, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:154, 0: Exactly one space required after comma
			fam_overlap.append([fam.name(),len(over)])
                                 ^ (bad-whitespace)
W:156, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:156, 0: Exactly one space required after comma
		gff_func.write_fasta(location+fam.name()+".fasta",up)
                                                   ^ (bad-whitespace)
W:158, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:158, 0: Exactly one space required around comparison
	if len(fam_overlap)>0:
                    ^ (bad-whitespace)
W:159, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:160, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:162, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:162, 0: Exactly one space required after comma
		with open(location+"overlap.txt","w") as f:
                                  ^ (bad-whitespace)
W:163, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:164, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:165, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:  1, 0: Missing module docstring (missing-docstring)
W:  7, 0: Relative import 'gff_func', should be 'bin.gff.gff_func' (relative-import)
C: 11, 0: Old-style class defined. (old-style-class)
C: 28, 6: Invalid variable name "s" (invalid-name)
C: 48, 6: Invalid variable name "g" (invalid-name)
C: 64, 6: Invalid variable name "n" (invalid-name)
C: 79, 7: Invalid variable name "s" (invalid-name)
C: 87, 1: Invalid variable name "l" (invalid-name)
C:114,31: Invalid variable name "f" (invalid-name)
E:134,60: Undefined variable 'gff_rec_' (undefined-variable)
W:128,27: Unused argument 'gff_rec_list' (unused-argument)
W:132, 6: Unused variable 'i' (unused-variable)
R:139, 0: Too many local variables (17/15) (too-many-locals)
C:144, 2: Invalid variable name "up" (invalid-name)
C:162,43: Invalid variable name "f" (invalid-name)
W:146, 6: Unused variable 'i' (unused-variable)
W:163, 7: Unused variable 'entry' (unused-variable)
************* Module bin.gff.gff_func
C:  4, 0: Line too long (130/80) (line-too-long)
C:  9, 0: Exactly one space required after comma
def retrieve_up(geneids,gff_dic,fasta_dic,length=100):
                       ^ (bad-whitespace)
C:  9, 0: Exactly one space required after comma
def retrieve_up(geneids,gff_dic,fasta_dic,length=100):
                               ^ (bad-whitespace)
C:  9, 0: Exactly one space required after comma
def retrieve_up(geneids,gff_dic,fasta_dic,length=100):
                                         ^ (bad-whitespace)
W: 10, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 13, 0: Line too long (191/80) (line-too-long)
W: 22, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 23, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 26, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 27, 0: Trailing whitespace (trailing-whitespace)
W: 29, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 30, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 31, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 31, 0: Exactly one space required after comma
			l = find_name(gff_dic,seq_id,g)
                        ^ (bad-whitespace)
C: 31, 0: Exactly one space required after comma
			l = find_name(gff_dic,seq_id,g)
                               ^ (bad-whitespace)
W: 32, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 33, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 33, 0: Exactly one space required after comma
				start,end,strand = l
         ^ (bad-whitespace)
C: 33, 0: Exactly one space required after comma
				start,end,strand = l
             ^ (bad-whitespace)
W: 34, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 35, 0: Trailing whitespace (trailing-whitespace)
W: 36, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 36, 0: Exactly one space required after comma
		seq,overlap = retrieve_up_single(g,seq_id,gff_dic,fasta_dic,length)
     ^ (bad-whitespace)
C: 36, 0: Exactly one space required after comma
		seq,overlap = retrieve_up_single(g,seq_id,gff_dic,fasta_dic,length)
                                    ^ (bad-whitespace)
C: 36, 0: Exactly one space required after comma
		seq,overlap = retrieve_up_single(g,seq_id,gff_dic,fasta_dic,length)
                                           ^ (bad-whitespace)
C: 36, 0: Exactly one space required after comma
		seq,overlap = retrieve_up_single(g,seq_id,gff_dic,fasta_dic,length)
                                                   ^ (bad-whitespace)
C: 36, 0: Exactly one space required after comma
		seq,overlap = retrieve_up_single(g,seq_id,gff_dic,fasta_dic,length)
                                                             ^ (bad-whitespace)
W: 37, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 37, 0: Exactly one space required after comma
		upstream.append([start,end,strand,g,seq_id,seq])
                        ^ (bad-whitespace)
C: 37, 0: Exactly one space required after comma
		upstream.append([start,end,strand,g,seq_id,seq])
                            ^ (bad-whitespace)
C: 37, 0: Exactly one space required after comma
		upstream.append([start,end,strand,g,seq_id,seq])
                                   ^ (bad-whitespace)
C: 37, 0: Exactly one space required after comma
		upstream.append([start,end,strand,g,seq_id,seq])
                                     ^ (bad-whitespace)
C: 37, 0: Exactly one space required after comma
		upstream.append([start,end,strand,g,seq_id,seq])
                                            ^ (bad-whitespace)
C: 38, 0: Trailing whitespace (trailing-whitespace)
W: 40, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 41, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 42, 0: Trailing whitespace (trailing-whitespace)
W: 42, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 42, 0: Exactly one space required after comma
	return upstream,over 
                ^ (bad-whitespace)
C: 46, 0: Exactly one space required after comma
def retrieve_up_single(geneid,seqid,gff_dic,fasta_dic,length=100):
                             ^ (bad-whitespace)
C: 46, 0: Exactly one space required after comma
def retrieve_up_single(geneid,seqid,gff_dic,fasta_dic,length=100):
                                   ^ (bad-whitespace)
C: 46, 0: Exactly one space required after comma
def retrieve_up_single(geneid,seqid,gff_dic,fasta_dic,length=100):
                                           ^ (bad-whitespace)
C: 46, 0: Exactly one space required after comma
def retrieve_up_single(geneid,seqid,gff_dic,fasta_dic,length=100):
                                                     ^ (bad-whitespace)
W: 47, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 48, 0: Line too long (81/80) (line-too-long)
W: 51, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 52, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 53, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 54, 0: Trailing whitespace (trailing-whitespace)
W: 56, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 56, 0: Exactly one space required after comma
		start,end,strand = find_name(gff_dic,seqid,geneid)
       ^ (bad-whitespace)
C: 56, 0: Exactly one space required after comma
		start,end,strand = find_name(gff_dic,seqid,geneid)
           ^ (bad-whitespace)
C: 56, 0: Exactly one space required after comma
		start,end,strand = find_name(gff_dic,seqid,geneid)
                                      ^ (bad-whitespace)
C: 56, 0: Exactly one space required after comma
		start,end,strand = find_name(gff_dic,seqid,geneid)
                                            ^ (bad-whitespace)
C: 58, 0: Line too long (83/80) (line-too-long)
W: 59, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 60, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 61, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 62, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 63, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 64, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 64, 0: Line too long (108/80) (line-too-long)
C: 64, 0: Exactly one space required after comma
				if g.end in xrange(extract,start): # g.end is the last position of gene in sequence, whatever its strand
                              ^ (bad-whitespace)
W: 65, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 66, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 66, 0: Exactly one space required after comma
				elif g.start in xrange(extract,start):
                                  ^ (bad-whitespace)
W: 67, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 67, 0: Line too long (103/80) (line-too-long)
C: 67, 0: Exactly one space required after comma
					print "Detected overlapping element {}\ntype: {} start: {} end: {}".format(g,g.type,g.start,g.end)
                                                                                 ^ (bad-whitespace)
C: 67, 0: Exactly one space required after comma
					print "Detected overlapping element {}\ntype: {} start: {} end: {}".format(g,g.type,g.start,g.end)
                                                                                        ^ (bad-whitespace)
C: 67, 0: Exactly one space required after comma
					print "Detected overlapping element {}\ntype: {} start: {} end: {}".format(g,g.type,g.start,g.end)
                                                                                                ^ (bad-whitespace)
W: 68, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 69, 0: Trailing whitespace (trailing-whitespace)
C: 70, 0: Line too long (197/80) (line-too-long)
W: 70, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 70, 0: Exactly one space required after comma
			return fasta_dic[seqid][extract-1:start-1].reverse_complement().complement(),overlap # extract natural position, reverse the return to begin with first base just before the beginning of the gene
                                                                               ^ (bad-whitespace)
W: 71, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 72, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 73, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 74, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 75, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 76, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 76, 0: Exactly one space required after comma
				if g.start in xrange(end+1,extract+1):
                              ^ (bad-whitespace)
W: 77, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 78, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 78, 0: Exactly one space required after comma
				elif g.end in xrange(end+1,extract+1):
                              ^ (bad-whitespace)
W: 79, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 79, 0: Line too long (103/80) (line-too-long)
C: 79, 0: Exactly one space required after comma
					print "Detected overlapping element {}\ntype: {} start: {} end: {}".format(g,g.type,g.start,g.end)
                                                                                 ^ (bad-whitespace)
C: 79, 0: Exactly one space required after comma
					print "Detected overlapping element {}\ntype: {} start: {} end: {}".format(g,g.type,g.start,g.end)
                                                                                        ^ (bad-whitespace)
C: 79, 0: Exactly one space required after comma
					print "Detected overlapping element {}\ntype: {} start: {} end: {}".format(g,g.type,g.start,g.end)
                                                                                                ^ (bad-whitespace)
W: 80, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 81, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 81, 0: Exactly one space required after comma
			return fasta_dic[seqid][end:extract],overlap
                                       ^ (bad-whitespace)
W: 82, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 83, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 84, 0: Trailing whitespace (trailing-whitespace)
C: 87, 0: Exactly one space required after comma
def fasta_len(fasta_dic,seqid):
                       ^ (bad-whitespace)
W: 88, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 90, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 92, 0: Trailing whitespace (trailing-whitespace)
W: 93, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 94, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 95, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 96, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 97, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:101, 0: Exactly one space required after comma
def retrieve_seq(fasta_dic,uplist):
                          ^ (bad-whitespace)
W:102, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:105, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:108, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:109, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:110, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:111, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:112, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:113, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:114, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:115, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:119, 0: Exactly one space required after comma
def write_fasta(file_name,upseqs):
                         ^ (bad-whitespace)
W:120, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:121, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:122, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:124, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:126, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:127, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:128, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:129, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:130, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:131, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:132, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:134, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:134, 0: Exactly one space required after comma
		ident = "{} | {} | {}-{} | {}".format(seqid,gene,str(start),str(end),strand)
                                             ^ (bad-whitespace)
C:134, 0: Exactly one space required after comma
		ident = "{} | {} | {}-{} | {}".format(seqid,gene,str(start),str(end),strand)
                                                  ^ (bad-whitespace)
C:134, 0: Exactly one space required after comma
		ident = "{} | {} | {}-{} | {}".format(seqid,gene,str(start),str(end),strand)
                                                             ^ (bad-whitespace)
C:134, 0: Exactly one space required after comma
		ident = "{} | {} | {}-{} | {}".format(seqid,gene,str(start),str(end),strand)
                                                                      ^ (bad-whitespace)
W:136, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:136, 0: Exactly one space required after comma
		rec = SeqRecord(seq,id=ident,name=gene,description="")
                     ^ (bad-whitespace)
C:136, 0: Exactly one space required after comma
		rec = SeqRecord(seq,id=ident,name=gene,description="")
                              ^ (bad-whitespace)
C:136, 0: Exactly one space required after comma
		rec = SeqRecord(seq,id=ident,name=gene,description="")
                                        ^ (bad-whitespace)
W:138, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:140, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:141, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:141, 0: Exactly one space required after comma
	SeqIO.write(records,file_name,"fasta")
                    ^ (bad-whitespace)
C:141, 0: Exactly one space required after comma
	SeqIO.write(records,file_name,"fasta")
                              ^ (bad-whitespace)
W:142, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:146, 0: Exactly one space required after comma
def extract_cds(gff_dic,fasta_dic,par_name=None):
                       ^ (bad-whitespace)
C:146, 0: Exactly one space required after comma
def extract_cds(gff_dic,fasta_dic,par_name=None):
                                 ^ (bad-whitespace)
W:147, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:148, 0: Line too long (91/80) (line-too-long)
C:149, 0: Line too long (97/80) (line-too-long)
W:152, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:153, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:154, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:155, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:156, 0: Trailing whitespace (trailing-whitespace)
W:157, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:158, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:159, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:163, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:164, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:165, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:166, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:167, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:167, 0: Exactly one space required after comma
			seq = pg.get_prot_seq(gff_dic,fasta_dic,p)
                                ^ (bad-whitespace)
C:167, 0: Exactly one space required after comma
			seq = pg.get_prot_seq(gff_dic,fasta_dic,p)
                                          ^ (bad-whitespace)
W:169, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:169, 0: Exactly one space required after comma
			interest.append([start,end,strand,name,seq_id,seq])
                         ^ (bad-whitespace)
C:169, 0: Exactly one space required after comma
			interest.append([start,end,strand,name,seq_id,seq])
                             ^ (bad-whitespace)
C:169, 0: Exactly one space required after comma
			interest.append([start,end,strand,name,seq_id,seq])
                                    ^ (bad-whitespace)
C:169, 0: Exactly one space required after comma
			interest.append([start,end,strand,name,seq_id,seq])
                                         ^ (bad-whitespace)
C:169, 0: Exactly one space required after comma
			interest.append([start,end,strand,name,seq_id,seq])
                                                ^ (bad-whitespace)
W:171, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:173, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:174, 0: Trailing whitespace (trailing-whitespace)
W:175, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:176, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:177, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:178, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:179, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:180, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:181, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:182, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:183, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:184, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:186, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:186, 0: Exactly one space required after comma
				seq = pg.get_prot_seq(gff_dic,fasta_dic,trans)
                                 ^ (bad-whitespace)
C:186, 0: Exactly one space required after comma
				seq = pg.get_prot_seq(gff_dic,fasta_dic,trans)
                                           ^ (bad-whitespace)
W:188, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:188, 0: Exactly one space required after comma
				interest.append([start,end,strand,name,seq_id,seq])
                          ^ (bad-whitespace)
C:188, 0: Exactly one space required after comma
				interest.append([start,end,strand,name,seq_id,seq])
                              ^ (bad-whitespace)
C:188, 0: Exactly one space required after comma
				interest.append([start,end,strand,name,seq_id,seq])
                                     ^ (bad-whitespace)
C:188, 0: Exactly one space required after comma
				interest.append([start,end,strand,name,seq_id,seq])
                                          ^ (bad-whitespace)
C:188, 0: Exactly one space required after comma
				interest.append([start,end,strand,name,seq_id,seq])
                                                 ^ (bad-whitespace)
W:189, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:191, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:192, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:194, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:198, 0: Exactly one space required after comma
def find_name(gff_dic,seqid,geneid):
                     ^ (bad-whitespace)
C:198, 0: Exactly one space required after comma
def find_name(gff_dic,seqid,geneid):
                           ^ (bad-whitespace)
W:199, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:200, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:201, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:201, 0: Exactly one space required after comma
	for i,r in enumerate(gff_dic[seqid]):
      ^ (bad-whitespace)
W:202, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:203, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:204, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:205, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:206, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:207, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:208, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:209, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:210, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W:211, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:211, 0: Exactly one space required after comma
		return [start,end,strand]
               ^ (bad-whitespace)
C:211, 0: Exactly one space required after comma
		return [start,end,strand]
                   ^ (bad-whitespace)
C:  1, 0: Missing module docstring (missing-docstring)
W:  7, 0: Relative import 'parse_gff_v2', should be 'bin.gff.parse_gff_v2' (relative-import)
R:  9, 0: Too many local variables (16/15) (too-many-locals)
C: 29, 5: Invalid variable name "g" (invalid-name)
C: 31, 3: Invalid variable name "l" (invalid-name)
W: 33, 4: Attempting to unpack a non-sequence defined at line 209 (unpacking-non-sequence)
W: 36, 2: Attempting to unpack a non-sequence defined at line 83 (unpacking-non-sequence)
W: 36,37: Using possibly undefined loop variable 'seq_id' (undefined-loop-variable)
W: 37,38: Using possibly undefined loop variable 'seq_id' (undefined-loop-variable)
W: 52, 2: Statement seems to have no effect (pointless-statement)
W: 56, 2: Attempting to unpack a non-sequence defined at line 209 (unpacking-non-sequence)
C: 63, 7: Invalid variable name "g" (invalid-name)
C: 75, 7: Invalid variable name "g" (invalid-name)
C:108, 5: Invalid variable name "u" (invalid-name)
C:126, 5: Invalid variable name "u" (invalid-name)
C:155, 6: Invalid variable name "p" (invalid-name)
E:177,19: Undefined variable 'g' (undefined-variable)
C:201, 7: Invalid variable name "r" (invalid-name)
************* Module bin.gff.main
C:  9, 0: Trailing whitespace (trailing-whitespace)
W: 10, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 11, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 12, 0: Trailing whitespace (trailing-whitespace)
W: 13, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 14, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 15, 0: Trailing whitespace (trailing-whitespace)
C: 16, 0: Trailing whitespace (trailing-whitespace)
W: 16, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 16, 0: Exactly one space required after comma
	print "Parameters used: {} genes at least, retrieve {}nt".format(num,length)	
                                                                     ^ (bad-whitespace)
W: 19, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 19, 0: Exactly one space required after comma
	fam_parser,spec = fam.family_parse(family_file,num,header)
           ^ (bad-whitespace)
C: 19, 0: Exactly one space required after comma
	fam_parser,spec = fam.family_parse(family_file,num,header)
                                               ^ (bad-whitespace)
C: 19, 0: Exactly one space required after comma
	fam_parser,spec = fam.family_parse(family_file,num,header)
                                                   ^ (bad-whitespace)
W: 21, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 23, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 24, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 25, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 26, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 28, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 29, 0: Trailing whitespace (trailing-whitespace)
W: 30, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 31, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 32, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 33, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 34, 0: Trailing whitespace (trailing-whitespace)
W: 36, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 37, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 38, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 39, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 40, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 43, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 44, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 45, 0: Found indentation with tabs instead of spaces (mixed-indentation)
W: 46, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 47, 0: Trailing whitespace (trailing-whitespace)
W: 47, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 47, 0: Exactly one space required after comma
		gff_rec[gk] = pg.load_gff(gff_files[gk],["CDS","gene"]) 
                                         ^ (bad-whitespace)
C: 47, 0: Exactly one space required after comma
		gff_rec[gk] = pg.load_gff(gff_files[gk],["CDS","gene"]) 
                                                ^ (bad-whitespace)
W: 48, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 51, 0: Line too long (85/80) (line-too-long)
W: 51, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C: 51, 0: Exactly one space required after comma
	fam.family_upstream(fam_parser,gff_rec,fasta_rec,400,"data/families/WGD2/upstream/")
                               ^ (bad-whitespace)
C: 51, 0: Exactly one space required after comma
	fam.family_upstream(fam_parser,gff_rec,fasta_rec,400,"data/families/WGD2/upstream/")
                                       ^ (bad-whitespace)
C: 51, 0: Exactly one space required after comma
	fam.family_upstream(fam_parser,gff_rec,fasta_rec,400,"data/families/WGD2/upstream/")
                                                 ^ (bad-whitespace)
C: 51, 0: Exactly one space required after comma
	fam.family_upstream(fam_parser,gff_rec,fasta_rec,400,"data/families/WGD2/upstream/")
                                                     ^ (bad-whitespace)
W: 56, 0: Found indentation with tabs instead of spaces (mixed-indentation)
C:  1, 0: Missing module docstring (missing-docstring)
W:  3, 0: Relative import 'parse_gff_v2', should be 'bin.gff.parse_gff_v2' (relative-import)
W:  4, 0: Relative import 'family', should be 'bin.gff.family' (relative-import)
C:  6, 0: Missing function docstring (missing-docstring)
C: 38, 5: Invalid variable name "fk" (invalid-name)
C: 45, 5: Invalid variable name "gk" (invalid-name)
W: 19,12: Unused variable 'spec' (unused-variable)
************* Module bin.gff.parse_gff_v2
C: 24, 0: Exactly one space required before assignment
__author__  = "Uli Koehler"
            ^ (bad-whitespace)
C: 28, 0: Line too long (101/80) (line-too-long)
C: 44, 0: Trailing whitespace (trailing-whitespace)
C: 68, 0: Line too long (85/80) (line-too-long)
C: 76, 0: Line too long (90/80) (line-too-long)
C: 78, 0: Line too long (152/80) (line-too-long)
C: 79, 0: Line too long (91/80) (line-too-long)
C: 85, 0: Line too long (108/80) (line-too-long)
C: 97, 0: Trailing whitespace (trailing-whitespace)
C:112, 0: Line too long (98/80) (line-too-long)
C:114, 0: Line too long (151/80) (line-too-long)
C:115, 0: Line too long (90/80) (line-too-long)
C:120, 0: Line too long (107/80) (line-too-long)
C:122, 0: Line too long (89/80) (line-too-long)
C:125, 0: Trailing whitespace (trailing-whitespace)
C:131, 0: Line too long (86/80) (line-too-long)
C:135, 0: Line too long (180/80) (line-too-long)
C:140, 0: No space allowed before :
        for record in SeqIO.parse(handle, "fasta") :
                                                   ^ (bad-whitespace)
C:146, 0: Trailing whitespace (trailing-whitespace)
C:151, 0: Line too long (161/80) (line-too-long)
C:160, 0: Exactly one space required around assignment
        if len(list_types)==0 or record.type in list_types:
                          ^^ (bad-whitespace)
C:178, 0: Trailing whitespace (trailing-whitespace)
C:180, 0: Trailing whitespace (trailing-whitespace)
C:181, 0: Trailing whitespace (trailing-whitespace)
C: 28, 0: Invalid constant name "gffInfoFields" (invalid-name)
C: 29, 0: Invalid constant name "GFFRecord" (invalid-name)
C: 31, 0: Invalid function name "parseGFFAttributes" (invalid-name)
C: 31, 0: Invalid argument name "attributeString" (invalid-name)
C: 33,31: More than one statement on a single line (multiple-statements)
C: 40, 0: Invalid function name "parseGFF3" (invalid-name)
C: 49, 4: Invalid variable name "openFunc" (invalid-name)
C: 52,37: More than one statement on a single line (multiple-statements)
C: 57,12: Invalid variable name "normalizedInfo" (invalid-name)
W: 70,18: Used * or ** magic (star-args)
W: 74,42: Redefining built-in 'type' (redefined-builtin)
W: 74,38: Redefining built-in 'id' (redefined-builtin)
C: 74, 0: Invalid function name "getSequence" (invalid-name)
C: 74, 0: Invalid argument name "id" (invalid-name)
C: 87, 4: Invalid variable name "ll" (invalid-name)
C: 89, 8: Invalid variable name "gffEntry" (invalid-name)
W:102, 7: Using possibly undefined loop variable 'entry' (undefined-loop-variable)
W:110,39: Redefining built-in 'id' (redefined-builtin)
C:110, 0: Invalid argument name "id" (invalid-name)
W:161,12: Redefining built-in 'id' (redefined-builtin)
C:161,12: Invalid variable name "id" (invalid-name)
W:161,12: Unused variable 'id' (unused-variable)
R:  1, 0: Similar lines in 2 files
==bin.extract_rand_cds:20
==bin.gff.main:18
	fam_parser,spec = fam.family_parse(family_file,num,header)

	fasta_files = {}

	fasta_files["PSEX"] = "data/sexaurelia/sexaurelia_AZ8-4_assembly_v1.fasta"
	fasta_files["PTET"] = "data/tetraurelia/ptetraurelia_mac_51.fa"
	fasta_files["PCAU"] = "data/caudatum/caudatum_43c3d_assembly_v1.fasta"
	fasta_files["PBI"] = "data/biaurelia/biaurelia_V1-4_assembly_v1.fasta"

	gff_files = {}

	gff_files["PSEX"] = "data/sexaurelia/sexaurelia_AZ8-4_annotation_v1.gff3"
	gff_files["PTET"] = "data/tetraurelia/tetraurelia51_EuGene_annotation.gff3"
	gff_files["PCAU"] = "data/caudatum/caudatum_43c3d_annotation_v1.gff3"
	gff_files["PBI"] = "data/biaurelia/biaurelia_V1-4_annotation_v1.gff3"

	# load all fasta files in memory
	fasta_rec = {}
	print "Loading fasta files..."
	for fk in fasta_files.keys(): (duplicate-code)
R:  1, 0: Similar lines in 2 files
==bin.extract_rand_cds:41
==bin.gff.main:38
		fasta_rec[fk] = pg.load_fasta(fasta_files[fk])
	print "Done."

	# load all gff files in memory
	gff_rec = {}
	print "Loading GFF files..."
	for gk in gff_files.keys():
		print "New file..." (duplicate-code)


Report
======
538 statements analysed.

Messages by category
--------------------

+-----------+-------+---------+-----------+
|type       |number |previous |difference |
+===========+=======+=========+===========+
|convention |369    |369      |=          |
+-----------+-------+---------+-----------+
|refactor   |5      |5        |=          |
+-----------+-------+---------+-----------+
|warning    |483    |483      |=          |
+-----------+-------+---------+-----------+
|error      |2      |2        |=          |
+-----------+-------+---------+-----------+



% errors / warnings by module
-----------------------------

+---------------------+------+--------+---------+-----------+
|module               |error |warning |refactor |convention |
+=====================+======+========+=========+===========+
|bin.gff.gff_func     |50.00 |26.92   |20.00    |27.10      |
+---------------------+------+--------+---------+-----------+
|bin.gff.family       |50.00 |22.77   |20.00    |16.26      |
+---------------------+------+--------+---------+-----------+
|bin.bigfoot.weight   |0.00  |19.25   |20.00    |14.36      |
+---------------------+------+--------+---------+-----------+
|bin.bigfoot.parser   |0.00  |15.53   |0.00     |11.11      |
+---------------------+------+--------+---------+-----------+
|bin.extract_rand_cds |0.00  |7.25    |0.00     |5.42       |
+---------------------+------+--------+---------+-----------+
|bin.gff.main         |0.00  |6.63    |0.00     |5.96       |
+---------------------+------+--------+---------+-----------+
|bin.gff.parse_gff_v2 |0.00  |1.45    |40.00    |10.57      |
+---------------------+------+--------+---------+-----------+
|bin.bigfoot.setup    |0.00  |0.21    |0.00     |7.05       |
+---------------------+------+--------+---------+-----------+



Messages
--------

+------------------------+------------+
|message id              |occurrences |
+========================+============+
|mixed-indentation       |453         |
+------------------------+------------+
|bad-whitespace          |193         |
+------------------------+------------+
|line-too-long           |58          |
+------------------------+------------+
|invalid-name            |57          |
+------------------------+------------+
|trailing-whitespace     |43          |
+------------------------+------------+
|missing-docstring       |12          |
+------------------------+------------+
|unused-variable         |9           |
+------------------------+------------+
|relative-import         |8           |
+------------------------+------------+
|redefined-builtin       |4           |
+------------------------+------------+
|unpacking-non-sequence  |3           |
+------------------------+------------+
|undefined-loop-variable |3           |
+------------------------+------------+
|too-many-locals         |3           |
+------------------------+------------+
|missing-final-newline   |3           |
+------------------------+------------+
|undefined-variable      |2           |
+------------------------+------------+
|multiple-statements     |2           |
+------------------------+------------+
|duplicate-code          |2           |
+------------------------+------------+
|unused-argument         |1           |
+------------------------+------------+
|star-args               |1           |
+------------------------+------------+
|pointless-statement     |1           |
+------------------------+------------+
|old-style-class         |1           |
+------------------------+------------+



Global evaluation
-----------------
Your code has been rated at -6.12/10 (previous run: -6.12/10, +0.00)

Duplication
-----------

+-------------------------+------+---------+-----------+
|                         |now   |previous |difference |
+=========================+======+=========+===========+
|nb duplicated lines      |28    |28       |=          |
+-------------------------+------+---------+-----------+
|percent duplicated lines |2.770 |2.770    |=          |
+-------------------------+------+---------+-----------+



External dependencies
---------------------
::

    Bio (bin.gff.parse_gff_v2)
      \-Seq 
      | \-Seq (bin.gff.parse_gff_v2)
      \-SeqIO (bin.gff.parse_gff_v2,bin.gff.gff_func)
      \-SeqRecord 
        \-SeqRecord (bin.gff.gff_func)



Raw metrics
-----------

+----------+-------+------+---------+-----------+
|type      |number |%     |previous |difference |
+==========+=======+======+=========+===========+
|code      |536    |60.91 |536      |=          |
+----------+-------+------+---------+-----------+
|docstring |175    |19.89 |175      |=          |
+----------+-------+------+---------+-----------+
|comment   |75     |8.52  |75       |=          |
+----------+-------+------+---------+-----------+
|empty     |94     |10.68 |94       |=          |
+----------+-------+------+---------+-----------+



Statistics by type
------------------

+---------+-------+-----------+-----------+------------+---------+
|type     |number |old number |difference |%documented |%badname |
+=========+=======+===========+===========+============+=========+
|module   |12     |12         |=          |16.67       |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|class    |3      |3          |=          |100.00      |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|method   |25     |25         |=          |100.00      |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|function |20     |20         |=          |90.00       |15.00    |
+---------+-------+-----------+-----------+------------+---------+



