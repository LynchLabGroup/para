# -*- coding: utf-8 -*-
# Snakefile.py file for Snakemake
import os
import glob

RES = [os.path.splitext(famfile)[0]+".comp" for famfile in glob.glob("results/WGD2ANC0000*/WGD2ANC0[0-9][0-9][0-9][0-9].motifs")]
BASENAME = [os.path.basename(family).rstrip(".comp") for family in RES]
UPSTREAM = "data/families/WGD2/upstream"
CDSLOC = "data/families/WGD2/CDS/nt"
RESULTS = "results/"
MINLEN = 15
MAXLEN = 250
MINFAMMEMBER = 4
LOWFAMMEMBER = 4
EVAL = 0.001
PREDTHRE = 0.9
ALITHRE = 0.8
MINWIDTH = 4
NMOTIFS = 5
BFPARAM = "10000,20000,1000"
OVERLAP = 0.9

### Rules for Retrieving Sequences

# rule retrieve_CDS:
#     """Retrieve CDSs according to families"""
#     output: dynamic(CDSLOC+"/{family}.fasta")
#     threads: 1
#     shell: 
#         """
#         python2 bin/ntseq.py -f {MINFAMMEMBER} --header -loc {CDSLOC}/
#         """
rule retrieve_up:
    """Retrieve upstream sequences."""
    output: dynamic(UPSTREAM+"/{family}.fasta")
    threads: 1
    shell: "python2 bin/gff/main.py -l {MAXLEN} -ml {MINLEN} -f {LOWFAMMEMBER} -mf {MINFAMMEMBER} -loc {UPSTREAM}/ --head"

### Making dir
rule make_dir:
    """Make given dir"""
    input: UPSTREAM+"/{family}.fasta"
    output: temp(RESULTS+"/{family}/tmp")
    shell:
        """
        mkdir -p {input}
        touch {output}
        """
rule make_fasta:
    input: RESULTS+"/{family}/tmp"
    output: RESULTS+"/{family}/{family}.fasta"
    shell: "touch {output}"

### General Rules ###
rule all:
    input: dynamic(RESULTS+"/{family}/{family}.fasta")
