# -*- coding: utf-8 -*-
# Snakefile.py file for Snakemake
import os
import glob

UPSTREAM = "data/families/WGD2/upstream"
CDSLOC = "data/families/WGD2/CDS/nt"
RESULTS = "results/"
MINLEN = 15
MAXLEN = 250
MINFAMMEMBER = 4
LOWFAMMEMBER = 4
EVAL = 0.001
PREDTHRE = 0.9
ALITHRE = 0.8
MINWIDTH = 4
NMOTIFS = 5
BFPARAM = "10000,20000,1000"
OVERLAP = 0.9

### Rules for Retrieving Sequences

# rule retrieve_CDS:
#     """Retrieve CDSs according to families"""
#     output: dynamic(CDSLOC+"/{family}.fasta")
#     threads: 1
#     shell: 
#         """
#         python2 bin/ntseq.py -f {MINFAMMEMBER} --header -loc {CDSLOC}/
#         """
def dir_list_from_name(prefix, names):
    real_name = []
    for name in names:
        real = name.split("/")[-1].rstrip(".fasta")
        real_name.append(prefix+real)
    return real_name

rule retrieve_up:
    """Retrieve upstream sequences."""
    output: dynamic(UPSTREAM+"/{family}.fasta")
    threads: 1
    #"python2 bin/gff/main.py -l {MAXLEN} -ml {MINLEN} -f {LOWFAMMEMBER} -mf {MINFAMMEMBER} -loc {UPSTREAM}/ --head"
    shell: """
        python2 bin/gff/main.py -l {MAXLEN} -ml {MINLEN} -f {LOWFAMMEMBER} -mf {MINFAMMEMBER} -loc {UPSTREAM}/ --head
        """
### Making dir
rule make_dir:
    """Make given dir"""
    input: dynamic(UPSTREAM+"/{family}.fasta")
    #params: dir=RESULTS+"{family}/"
    output: temp(RESULTS+"dirtmp")
    run:
        dir_list = dir_list_from_name(RESULTS, input)
        print(dir_list)
        shell("""
        mkdir -p {dir_list}
        touch {output}
        """)
rule make_fasta:
    input: rules.make_dir.output 
    output: RESULTS+"{family}/{family}.fasta"
    shell: "touch {output}"

### General Rules ###
rule all:
    input: dynamic(RESULTS+"{family}/{family}.fasta")
